{"version":3,"sources":["webpack://iptv/webpack/universalModuleDefinition","webpack://iptv/webpack/bootstrap","webpack://iptv/./index.js","webpack://iptv/(webpack)/buildin/module.js","webpack://iptv/external {\"commonjs\":\"morgan-iptv-core\",\"commonjs2\":\"morgan-iptv-core\",\"amd\":\"morgan-iptv-core\",\"root\":\"iptv\"}"],"names":["root","factory","exports","module","require","define","amd","iptv","this","__WEBPACK_EXTERNAL_MODULE__2__","i","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","default","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","_typeof","iterator","e","constructor","_morganIptvCore","_morganIptvCore2","_interopRequireDefault","window","keyList","focusDires","focusCollection","keys","this_","UP","DOWN","LEFT","RIGHT","OK","BACK","ZERO","ONE","TWO","THREE","FOUR","FIVE","SIX","SEVEN","EIGHT","NINE","OUT_PAGE","HOME_PAGE","STOP","MENU","DEL","PAGEDOWN","PAGEUP","displayDire","lastDire","addKey","areaName","keyObj","ii","length","getKeyCodeName","keyCode","sii","kn","version","STBType","numChange","num_","num","isFunction","numEvent","direHandle","dire","fDires","curFocus","id","exeCode","nextNode","getFocus","enFocus","changeFocus","otherNode","otherEvent","other","focusHand","direType","toLowerCase","focusId_","oldFocus","nextFocusId","onBlur","fid","lastFocusId","onFocus","redirect","url","trim","enable","location","href","_code","code","type","indexOf","replace","eval","error","FocusModel","isCreated","own","X_Posi","Y_Posi","focusType","imgID","newSwap","oldSwap","dieArr","nodeObj","tempData","onFocusEvent","onBlurEvent","clickEvent","interval","changeSize","selectBorderId","selectionID","selectionObjID","focusImgZIndex","focusImgParentZIndex","imgZIndex","imgParentZIndex","upParentId","upAreaId","rightAreaId","rightParentId","enUpParentRoll","enRightParentRoll","enRightPageRoll","focusIndex","focusCurPageNum","focusAllPageNum","focusLeftRoll","focusFirstLeft","focusPageAllModel","focusPageAllLoad","init","parA","focB","upParentObj","$","upAreaObj","rightParentObj","rightAreaObj","parRollHeight","Math","abs","parseInt","style","top","parHeight","clientHeight","height","focusTop","isNull","rollHeight","parRollWidth","left","parWidth","clientWidth","width","focusLeft","parB","rollWidth","rollLeft","allModel","focusModel","src","onFocus_","isNotNull","show","lastFocusObj","addClass","attr","img","parentNode","zIndex","selects","toggleClass","div","document","createElement","setAttribute","className","appendChild","removeClass","onBlur_","hide","nextFocusObj","onClick","buttonData","api","log","buttonLog","buttonId","Dire","extend","up","upOther","right","rightOther","down","downOther","leftOther","upEvent","rightEvent","downEvent","leftEvent","upOtherEvent","rightOtherEvent","downOtherEvent","leftOtherEvent","rightNoEvent","rightNo","leftNoEvent","leftNo","downNoEvent","downNo","upNoEvent","upNo","IdList","_x","_y","_imgID","_upParentId","x","y","getIdList","_id","d1","x1","x2","x3","x4","x5","substring","imgsrc","par","fn","focusObj","enableFocus","context","isArray","obj","disableFocus","addFocus","doms","focusId","push","domObj","getElementById","model","idParams","ParentNode","tweenSpeed","diredemp","keyDownEventfunction","evt","keyName","msgEvent","Utility","getEvent","msg","videoUrl","preventDefault","event","returnValue","backfunc","addEventListener","apply","webpackPolyfill","deprecate","paths","children"],"mappings":"CAAA,SAAAA,EAAAC,GACA,iBAAAC,SAAA,iBAAAC,OACAA,OAAAD,QAAAD,EAAAG,QAAA,qBACA,mBAAAC,eAAAC,IACAD,OAAA,qBAAAJ,GACA,iBAAAC,QACAA,QAAAK,KAAAN,EAAAG,QAAA,qBAEAJ,EAAAO,KAAAN,EAAAD,EAAAO,MARA,CASCC,KAAA,SAAAC,gCACD,gBAAAC,GCTA,IAAAC,EAAA,GAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAX,QAGA,IAAAC,EAAAQ,EAAAE,GAAA,CACAH,EAAAG,EACAC,KACAZ,QAAA,IAUA,OANAa,EAAAF,GAAAG,KAAAb,EAAAD,QAAAC,IAAAD,QAAAU,GAGAT,EAAAW,KAGAX,EAAAD,QA0DA,OArDAU,EAAAK,EAAAF,EAGAH,EAAAM,EAAAP,EAGAC,EAAAO,EAAA,SAAAjB,EAAAkB,EAAAC,GACAT,EAAAU,EAAApB,EAAAkB,IACAG,OAAAC,eAAAtB,EAAAkB,EAAA,CAA0CK,cAAAC,IAAAL,KAK1CT,EAAAe,EAAA,SAAAzB,GACA,oBAAA0B,eAAAC,aACAN,OAAAC,eAAAtB,EAAA0B,OAAAC,YAAA,CAAwDC,MAAA,WAExDP,OAAAC,eAAAtB,EAAA,cAAiD4B,YAQjDlB,EAAAmB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAAlB,EAAAkB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFAvB,EAAAe,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,cAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAAlB,EAAAO,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAtB,EAAA0B,EAAA,SAAAnC,GACA,IAAAkB,EAAAlB,KAAA8B,WACA,WAA2B,OAAA9B,EAAAoC,SAC3B,WAAiC,OAAApC,GAEjC,OADAS,EAAAO,EAAAE,EAAA,IAAAA,GACAA,GAIAT,EAAAU,EAAA,SAAAkB,EAAAC,GAAsD,OAAAlB,OAAAmB,UAAAC,eAAA3B,KAAAwB,EAAAC,IAGtD7B,EAAAgC,EAAA,GAIAhC,IAAAiC,EAAA,GDxEA,CCwEA,UAAA1C,OAAAD,QAAAU,qBAAA,uBAAAT,QAAA,IAAA2C,6BAAAC,8BAAAC,QAAA,mBAAApB,QAAA,iBAAAA,OAAAqB,SAAA,SAAAC,GAAA,cAAAA,GAAA,SAAAA,GAAA,OAAAA,GAAA,mBAAAtB,QAAAsB,EAAAC,cAAAvB,QAAAsB,IAAAtB,OAAAc,UAAA,gBAAAQ,GC/EAE,gBAAAxC,oBAAA,GAAAyC,iBAAAC,uBAAAF,iBAAA,SAAAE,uBAAAJ,GAAA,OAAAA,KAAAjB,WAAAiB,EAAA,CAAAX,QAAAW,IAGA,SAAWK,OAAQhD,MAKf,IAAIiD,QAAUjD,KAAKiD,QAAU,GAKzBC,WAAalD,KAAKkD,WAAa,GAK/BC,gBAAkBnD,KAAKmD,gBAAkB,GAIzCC,KAAOpD,KAAKoD,KAAO,WACf,IAAIC,EAAQpD,KACZoD,EAAMC,GAAK,KACXD,EAAME,KAAO,OACbF,EAAMG,KAAO,OACbH,EAAMI,MAAQ,QACdJ,EAAMK,GAAK,KACXL,EAAMM,KAAO,OACbN,EAAMO,KAAO,OACbP,EAAMQ,IAAM,MACZR,EAAMS,IAAM,MACZT,EAAMU,MAAQ,QACdV,EAAMW,KAAO,OACbX,EAAMY,KAAO,OACbZ,EAAMa,IAAM,MACZb,EAAMc,MAAQ,QACdd,EAAMe,MAAQ,QACdf,EAAMgB,KAAO,OACbhB,EAAMiB,SAAW,WACjBjB,EAAMkB,UAAY,YAClBlB,EAAMmB,KAAO,OACbnB,EAAMoB,KAAO,OACbpB,EAAMqB,IAAM,MACZrB,EAAMsB,SAAW,WACjBtB,EAAMuB,OAAS,UAGnB/C,IAAM7B,KAAK6B,IAAM,CAIbgD,eAIAC,SAAU,GAMVC,OAAQ,SAAUC,EAAUC,GACxB,IAAIC,EAAK,EACT,IAAK,IAAI/E,KAAK8E,IACRC,EAEND,EAAOE,OAASD,EAAK,IACrBlF,KAAKiD,QAAQ+B,EAAW,IAAMC,GAOlCG,eAAgB,SAAUC,GAEtB,IAAK,IAAIlF,KAAKH,KAAKiD,QAAS,CACxB,IAAIqC,EAAM,EAEV,IAAK,IAAIC,KAAMvF,KAAKiD,QAAQ9C,GAAI,CAE5B,KADEmF,EACEtF,KAAKiD,QAAQ9C,GAAGoF,IAAOF,EACvB,OAAOE,EAGX,GAAID,GAAQtF,KAAKiD,QAAQ9C,GAAGgF,OAAS,IAAQ,CACzC,IAAIK,EAAUxF,KAAKyF,UAEnB,GAAe,SAAXD,GAAiC,YAAXA,EACtB,QAKhB,MAAO,IAOXE,UAAW,SAAUC,GACjB,IAAIC,EAAM,GACV,OAAQD,GACJ,IAAK,MACDC,EAAM,EACN,MACJ,IAAK,MACDA,EAAM,EACN,MACJ,IAAK,QACDA,EAAM,EACN,MACJ,IAAK,OACDA,EAAM,EACN,MACJ,IAAK,OACDA,EAAM,EACN,MACJ,IAAK,MACDA,EAAM,EACN,MACJ,IAAK,QACDA,EAAM,EACN,MACJ,IAAK,QACDA,EAAM,EACN,MACJ,IAAK,OACDA,EAAM,EACN,MACJ,IAAK,OACDA,EAAM,EACN,MACJ,IAAK,MACDA,EAAM,MACN,MACJ,QACIA,EAAM,GAGV5F,KAAK6F,WAAW7F,KAAK6B,IAAIiE,WACzB9F,KAAK6B,IAAIiE,SAASF,IAO1BG,WAAY,SAAUC,GAClBnE,IAAIiD,SAAWkB,EACf,IAAIC,EAAS/C,WAAWrB,IAAIqE,SAASC,IACrC,GAAIF,EAAQ,CAGR,GAAIA,EAAOD,EAAO,SAEd,YADAnE,IAAIuE,QAAQH,EAAOD,EAAO,UAEvB,GAAIC,EAAOD,GAAO,CAErB,GAAoB,WAAhBC,EAAOD,GAEP,YADAnE,IAAIiD,SAAW,IAKnB,IADIuB,EAAWrG,KAAK,IAAMiG,EAAOD,IAAOM,aACJ,GAApBD,EAASE,QAErB,YADA1E,IAAI2E,YAAYP,EAAOD,IAGpB,GAAIK,GAAgC,GAApBA,EAASE,SAAoBN,EAAOD,EAAO,cAG9D,YADAnE,IAAIuE,QAAQH,EAAOD,EAAO,eAEvB,GAAIK,GAAgC,GAApBA,EAASE,SAAoBN,EAAOD,EAAO,UAG9D,IADIS,EAAYzG,KAAK,IAAMiG,EAAOD,EAAO,UAAUM,aACb,GAArBG,EAAUF,QAEvB,YADA1E,IAAI2E,YAAYP,EAAOD,EAAO,cAG/B,KAAKK,GAAYJ,EAAOD,EAAO,WAGlC,YADAnE,IAAIuE,QAAQH,EAAOD,EAAO,YAI1B,IAAIS,EAFD,IAAKJ,GAAYJ,EAAOD,EAAO,QAE9BS,EAAYzG,KAAK,IAAMiG,EAAOD,EAAO,OAAOM,aACV,GAArBG,EAAUF,QAEvB,YADA1E,IAAI2E,YAAYP,EAAOD,EAAO,YAInC,IAAIC,EAAOS,WAEd,YADA7E,IAAIuE,QAAQH,EAAOS,YAEhB,GAAIT,EAAOU,MAAO,CACrB,GAAoB,WAAhBV,EAAOU,MAEP,YADA9E,IAAIiD,SAAW,IAInB,IAAIuB,EACJ,IADIA,EAAWrG,KAAK,IAAMiG,EAAOU,OAAOL,aACJ,GAApBD,EAASE,QAErB,YADA1E,IAAI2E,YAAYP,EAAOU,SAKnC9E,IAAIiD,SAAW,IAMnB8B,UAAW,SAAUC,GACjB,GAAuB,GAAnBhF,IAAIgD,YACJ,OAAQgC,GACJ,IAAK,KACL,IAAK,OACL,IAAK,OACL,IAAK,QACDhF,IAAIkE,WAAWc,EAASC,iBAYxCN,YAAa,SAAUO,GAEnB,IAAIV,EAAWrG,KAAK,IAAM+G,GAAUT,WACpC,GAAID,EAAU,CACV,IAAIW,EAAWnF,IAAIqE,SAEnBc,EAASC,YAAcF,EAEvBC,EAASE,SACT,IAAIC,EAAMH,EAASb,GAMnB,OAJAtE,IAAIqE,SAAWG,EAEfxE,IAAIqE,SAASkB,YAAcD,EAC3BtF,IAAIqE,SAASmB,UACNhB,IASfiB,SAAU,SAAUC,GACZA,GAAOvH,KAAKwH,KAAKD,IAEU,GAAvB1F,IAAIqE,SAASuB,SAEb5F,IAAIqE,SAASuB,UACbzE,OAAO0E,SAASC,KAAOJ,IAQnCnB,QAAS,SAAAA,QAAUwB,OACf,GAAIA,MAAO,CACP,IAAIC,KAAOD,MACX,IAC6B,WAArB5H,KAAK8H,KAAKF,QAAuB5H,KAAKwH,KAAKI,OACR,GAA/BC,KAAKE,QAAQ,gBACbF,KAAOA,KAAKG,QAAQ,cAAe,IACnCC,KAAKJ,OAC6B,GAA3BA,KAAKE,QAAQ,YACpBlG,IAAIyF,SAASO,MAEW,aAArB7H,KAAK8H,KAAKF,QACjBA,MAAMnH,KAAKoB,IAAIqE,UAGrB,MAAOvD,GACL3C,KAAKkI,MAAMvF,OAS/Bd,IAAIkD,OAAO,KAAM,CACbzB,GAAI,GACJC,KAAM,GACNC,KAAM,GACNC,MAAO,GACPC,GAAI,GACJC,KAAM,EACNC,KAAM,GACNC,IAAK,GACLC,IAAK,GACLC,MAAO,GACPC,KAAM,GACNC,KAAM,GACNC,IAAK,GACLC,MAAO,GACPC,MAAO,GACPC,KAAM,GACNK,IAAK,GACLC,SAAU,GACVC,OAAQ,KAGZ/C,IAAIkD,OAAO,KAAM,CACbzB,GAAI,GACJC,KAAM,GACNC,KAAM,GACNC,MAAO,GACPC,GAAI,GACJC,KAAM,EACNC,KAAM,GACNC,IAAK,GACLC,IAAK,GACLC,MAAO,GACPC,KAAM,GACNC,KAAM,GACNC,IAAK,GACLC,MAAO,GACPC,MAAO,GACPC,KAAM,GACNK,IAAK,KACLC,SAAU,GACVC,OAAQ,KAGZ/C,IAAIkD,OAAO,OAAQ,CAACpB,KAAM,IAAKY,UAAW,IAAKD,SAAU,IAAKI,IAAK,MAEnE7C,IAAIkD,OAAO,OAAQ,CACfzB,GAAI,EACJC,KAAM,EACNC,KAAM,EACNC,MAAO,EACPC,GAAI,GACJC,KAAM,IACNC,KAAM,GACNC,IAAK,GACLC,IAAK,GACLC,MAAO,GACPC,KAAM,GACNC,KAAM,GACNC,IAAK,GACLC,MAAO,GACPC,MAAO,GACPC,KAAM,GACNC,SAAU,IACVC,UAAW,IACXC,KAAM,KACNC,KAAM,MAQVzE,KAAKmI,WAAa,WACd,IAAI9E,EAAQpD,KAEZoD,EAAMxC,KAAO,GAEbwC,EAAMoE,UAENpE,EAAMkD,WAENlD,EAAM+E,aAEN/E,EAAM8C,GAAK,IAEX9C,EAAMgF,IAAMhF,GAENiF,OAAS,EACfjF,EAAMkF,OAAS,EACflF,EAAMmF,UAAY,EAElBnF,EAAMoF,MAAQ,GAEdpF,EAAMqF,QAAU,GAEhBrF,EAAMsF,QAAU,GAEhBtF,EAAMuF,OAAS,KAEfvF,EAAMwF,QAAU,KAEhBxF,EAAMyF,SAAW,KAEjBzF,EAAM0F,aAAe,GAErB1F,EAAM2F,YAAc,GAEpB3F,EAAM4F,WAAa,GACnB5F,EAAM6F,SAAW,KAEjB7F,EAAM8F,WAAa,GAEnB9F,EAAM+F,eAAiB,GAEvB/F,EAAMgG,YAAc,cAEpBhG,EAAMiG,eAAiB,iBAEvBjG,EAAMkG,eAAiB,IAEvBlG,EAAMmG,qBAAuB,IAE7BnG,EAAMoG,UAAY,IAElBpG,EAAMqG,gBAAkB,IAExBrG,EAAMsG,WAAa,GAEnBtG,EAAMuG,SAAW,GACjBvG,EAAMwG,YAAc,GACpBxG,EAAMyG,cAAgB,GAEtBzG,EAAM0G,kBACN1G,EAAM2G,qBAGN3G,EAAM4G,mBAEN5G,EAAM6G,WAAa,EAEnB7G,EAAM8G,gBAAkB,EAExB9G,EAAM+G,gBAAkB,EAExB/G,EAAMgH,cAAgB,EAEtBhH,EAAMiH,eAAiB,EAEvBjH,EAAMkH,kBAAoB,KAE1BlH,EAAMmH,oBACNnH,EAAM+D,YAAc,GAGpB/D,EAAMoH,KAAO,WAGT,GAFA5I,IAAIqE,SAAW7C,EAAMgF,IAEjBhF,EAAM0G,gBAAkB1G,EAAM2G,kBAAmB,CAEjD,IA2GQU,EAEAC,EA7GJhB,EAAatG,EAAMsG,WAEnBC,EAAWvG,EAAMuG,SAEjBE,EAAgBzG,EAAMyG,cACtBD,EAAcxG,EAAMwG,YAEpBe,EAAc5K,KAAK6K,EAAElB,GACrBmB,EAAY9K,KAAK6K,EAAEjB,GACnBmB,EAAiB/K,KAAK6K,EAAEf,GACxBkB,EAAehL,KAAK6K,EAAEhB,GAE1B,GAAoB,QAAhBhI,IAAIiD,UAA8C,GAAxBzB,EAAM0G,eAAwB,CAGxD,IAAIkB,EAAgBC,KAAKC,IAAIC,SAASR,EAAYS,MAAMC,OAAS,EAE7DC,EAAYT,EAAUU,cAAgBJ,SAASN,EAAUO,MAAMI,SAAW,EAE1EC,EAAWN,SAAS/H,EAAMkF,QAa9B,IAXIvI,KAAK2L,OAAOD,IAAyB,GAAZA,KACzBA,EAAWrI,EAAMwF,QAAUqC,KAAKC,IAAIC,SAAS/H,EAAMwF,QAAQwC,MAAMC,MAAQ,IAMzEZ,EAAOO,EAAgBM,IAEvBZ,EAAOe,GAJOrI,EAAMwF,QAAUuC,SAAS/H,EAAMwF,QAAQwC,MAAMI,QAAU,IAMxD,CAEb,IAAIG,EAAajB,EAAOD,EAAOO,EAC/BL,EAAYS,MAAMC,IAAM,IAAMM,EAAa,MA4BnD,IAvBoB,MAAhB/J,IAAIiD,UAA4C,GAAxBzB,EAAM0G,gBAA0C,SAAhBlI,IAAIiD,UAA+C,GAAxBzB,EAAM0G,gBAA0C,QAAhBlI,IAAIiD,UAA8C,GAAxBzB,EAAM0G,kBAG/IkB,EAAgBC,KAAKC,IAAIC,SAASR,EAAYS,MAAMC,OAAS,EAE7DI,EAAWN,SAAS/H,EAAMkF,SAE1BvI,KAAK2L,OAAOD,IAAyB,GAAZA,KACzBA,EAAWrI,EAAMwF,QAAUqC,KAAKC,IAAIC,SAAS/H,EAAMwF,QAAQwC,MAAMC,MAAQ,IAKzEX,EAAOe,IAFPhB,EAAOO,KAMHW,EAAajB,EACjBC,EAAYS,MAAMC,IAAM,IAAMM,EAAa,OAK9B,SAAjB5L,KAAK8E,UAAkD,GAA3BzB,EAAM2G,kBAA2B,CAE7D,IAAI6B,EAAeX,KAAKC,IAAIC,SAASL,EAAeM,MAAMS,QAAU,EAEhEC,EAAWf,EAAagB,aAAeZ,SAASJ,EAAaK,MAAMY,QAAU,EAE7EC,EAAYd,SAAS/H,EAAMiF,SAE3BtI,KAAK2L,OAAOO,IAA2B,GAAbA,KAC1BA,EAAY7I,EAAMwF,QAAUqC,KAAKC,IAAIC,SAAS/H,EAAMwF,QAAQwC,MAAMS,OAAS,GAI/E,IAIIK,EAAON,EAIX,IANInB,EAAOmB,EAAeE,IAItBpB,EAAOuB,GANM7I,EAAMwF,QAAUuC,SAAS/H,EAAMwF,QAAQwC,MAAMY,OAAS,IAQtD,CAEb,IAAIG,EAAYzB,EAAOD,EAAOmB,EAC9Bd,EAAeM,MAAMS,KAAO,IAAMM,EAAY,UAEhCzB,EAAPwB,IAEHC,EAAYF,EAChBnB,EAAeM,MAAMS,KAAO,IAAMM,EAAY,MAKtD,GAAqB,QAAjBpM,KAAK8E,UAAiD,GAA3BzB,EAAM2G,mBAA8C,QAAjBhK,KAAK8E,UAAiD,GAA3BzB,EAAM2G,kBAE3F6B,EAAeX,KAAKC,IAAIC,SAASL,EAAeM,MAAMS,QAAU,EAEhEI,EAAYd,SAAS/H,EAAMiF,SAE3BtI,KAAK2L,OAAOO,IAA2B,GAAbA,KAC1BA,EAAY7I,EAAMwF,QAAUqC,KAAKC,IAAIC,SAAS/H,EAAMwF,QAAQwC,MAAMS,OAAS,IAK3EnB,EAAOuB,IAFPxB,EAAOmB,KAMHO,EAAYzB,EAChBI,EAAeM,MAAMS,KAAO,IAAMM,EAAY,WAInD,GAA6B,GAAzB/I,EAAM4G,gBAAyB,CAElCH,EAAgBzG,EAAMyG,cACtBD,EAAcxG,EAAMwG,YACpBkB,EAAiB/K,KAAK6K,EAAEf,GACxBkB,EAAehL,KAAK6K,EAAEhB,GAH1B,IAKIwC,EAAWhJ,EAAMgH,eAAiB,EACtCU,EAAeM,MAAMS,KAAO,IAAMO,EAAW,KAGjD,GAAIhJ,EAAMkH,mBAAsD,EAAjClH,EAAMkH,kBAAkBpF,QAAwC,GAA1B9B,EAAMmH,iBAA2B,CAClG,IAAI8B,EAAWjJ,EAAMkH,kBACrB,IAAK,IAAIpK,KAAKmM,EAAU,CAEpB,IAAIC,EAAavM,KAAK,IAAMsM,EAASnM,IAAImG,WACrCiG,GAAcA,EAAW7D,SACzB1I,KAAK,IAAMuM,EAAW9D,MAAQ,QAAQ+D,IAAID,EAAW7D,SAG7DrF,EAAMmH,sBAKdnH,EAAMoJ,SAAW,GAEjBpJ,EAAMgE,QAAU,WACZ,GAAIhE,EAAMkD,SAA8B,GAAnBlD,EAAM+E,UAAmB,CAE1C,GADA/E,EAAMoH,OACFzK,KAAK0M,UAAUrJ,EAAMoJ,UACrB5K,IAAIuE,QAAQ/C,EAAMoJ,eAElB,GAAuB,GAAnBpJ,EAAMmF,UACNxI,KAAK,IAAMqD,EAAMoF,OAAO+D,IAAInJ,EAAMqF,cAC/B,GAAuB,GAAnBrF,EAAMmF,UACT3G,IAAIqE,SAASuC,OACbzI,KAAK,IAAM6B,IAAIqE,SAASuC,OAAOkE,YAEhC,GAAuB,IAAnBtJ,EAAMmF,UAETxI,KAAK0M,UAAUrJ,EAAM+F,kBACjBwD,EAAe5M,KAAK,IAAMC,KAAKmH,aAAad,aAEF,IAA1BsG,EAAapE,YAAoBoE,EAEjD5M,KAAK,IAAMC,KAAKmJ,gBAAgBuD,OAEhC3M,KAAK,IAAMC,KAAKmJ,gBAAgByD,SAAS,cAG7C7M,KAAK,IAAMqD,EAAM+F,gBAAgB0D,KAAK,MAAOzJ,EAAMkF,OAAS,MAAMuE,KAAK,OAAQzJ,EAAMiF,OAAS,OAE9FtI,KAAKkI,MAAM,iCAEZ,GAAuB,IAAnB7E,EAAMmF,UAAiB,EAG1BuE,EAAM/M,KAAK,IAAMqD,EAAMoF,MAAQ,QAAQoE,SAAS,cAAc,IAC9DG,WAAW3B,MAAM4B,OAAS5J,EAAMmG,qBACpCxJ,KAAK,IAAMqD,EAAMoF,MAAQ,QAAQqE,KAAK,MAAQ1B,SAAS2B,EAAI1B,MAAMC,KAAOjI,EAAM8F,WAAc,MAAM2D,KAAK,OAAS1B,SAAS2B,EAAI1B,MAAMS,MAAQzI,EAAM8F,WAAc,MAAM2D,KAAK,QAAU1B,SAAS2B,EAAI1B,MAAMY,OAAS,EAAI5I,EAAM8F,WAAc,MAAM2D,KAAK,SAAW1B,SAAS2B,EAAI1B,MAAMI,QAAU,EAAIpI,EAAM8F,WAAc,MAEnT,IAAI+D,EAAUlN,KAAK,IAAMqD,EAAMoF,OAAOoE,SAAS,cAAcF,OAAO,GACpEO,EAAQF,WAAW3B,MAAM4B,OAAS5J,EAAMqG,gBACxC1J,KAAK,IAAMqD,EAAMoF,OAAOqE,KAAK,MAAQ1B,SAAS8B,EAAQ7B,MAAMC,KAAOjI,EAAM8F,WAAc,MAAM2D,KAAK,OAAS1B,SAAS8B,EAAQ7B,MAAMS,MAAQzI,EAAM8F,WAAc,MAAM2D,KAAK,QAAU1B,SAAS8B,EAAQ7B,MAAMY,OAAS,EAAI5I,EAAM8F,WAAc,MAAM2D,KAAK,SAAW1B,SAAS8B,EAAQ7B,MAAMI,QAAU,EAAIpI,EAAM8F,WAAc,WACvT,GAAuB,IAAnB9F,EAAMmF,WAGTuE,EAAM/M,KAAK,IAAMqD,EAAMoF,MAAQ,QAAQ0E,YAAY,UAAUN,SAAS,cAAc,IACpFG,WAAW3B,MAAM4B,OAAS5J,EAAMmG,qBACpCuD,EAAI1B,MAAMC,IAAOF,SAAS2B,EAAI1B,MAAMC,KAAOjI,EAAM8F,WAAc,KAC/D4D,EAAI1B,MAAMS,KAAQV,SAAS2B,EAAI1B,MAAMS,MAAQzI,EAAM8F,WAAc,KACjE4D,EAAI1B,MAAMY,MAASb,SAAS2B,EAAI1B,MAAMY,OAAS,EAAI5I,EAAM8F,WAAc,KACvE4D,EAAI1B,MAAMI,OAAUL,SAAS2B,EAAI1B,MAAMI,QAAU,EAAIpI,EAAM8F,WAAc,UACtE,GAAuB,IAAnB9F,EAAMmF,UAGbxI,KAAK,IAAMqD,EAAM8C,IAAIgH,YAAY,UAAUL,KAAK,SAAUzJ,EAAMqG,iBAAiBiD,YAC9E,GAAuB,IAAnBtJ,EAAMmF,WAKT4E,EAAMpN,KAAK6K,EAAExH,EAAMgG,iBAEnB+D,EAAMC,SAASC,cAAc,QACzBC,aAAa,KAAMlK,EAAMgG,aAC7B+D,EAAIjH,GAAK9C,EAAMgG,YACf+D,EAAI/B,MAAMY,MAAQ,MAClBmB,EAAI/B,MAAMI,OAAS,MACnB2B,EAAI/B,MAAMC,IAAM,MAChB8B,EAAI/B,MAAMS,KAAO,MACjBsB,EAAI/B,MAAM4B,OAAS5J,EAAMqG,gBACzB0D,EAAII,UAAY,kBAChBnK,EAAMwF,QAAQmE,WAAWS,YAAYL,KAErCR,EAAe5M,KAAK,IAAMqD,EAAM+D,aAAad,aAEH,IAA1BsG,EAAapE,WAA6C,IAA1BoE,EAAapE,UAC7DxI,KAAK,IAAMqD,EAAMgG,aAAasD,OAE9B3M,KAAK,IAAMqD,EAAMgG,aAAawD,SAAS,cAE3CO,EAAI/B,MAAMY,MAAQ5I,EAAMwF,QAAQwC,MAAMY,MACtCmB,EAAI/B,MAAMI,OAASpI,EAAMwF,QAAQwC,MAAMI,OACvC2B,EAAI/B,MAAMC,IAAMjI,EAAMwF,QAAQwC,MAAMC,IACpC8B,EAAI/B,MAAMS,KAAOzI,EAAMwF,QAAQwC,MAAMS,UAClC,GAAuB,IAAnBzI,EAAMmF,UAAiB,EAK1B4E,EAAMpN,KAAK6K,EAAExH,EAAMgG,iBAEnB+D,EAAMC,SAASC,cAAc,QACzBC,aAAa,KAAMlK,EAAMgG,aAC7B+D,EAAIjH,GAAK9C,EAAMgG,YACf+D,EAAI/B,MAAMY,MAAQ,MAClBmB,EAAI/B,MAAMI,OAAS,MACnB2B,EAAI/B,MAAMC,IAAM,MAChB8B,EAAI/B,MAAMS,KAAO,MACjBsB,EAAI/B,MAAM4B,OAAS5J,EAAMqG,gBACzB0D,EAAII,UAAY,kBAChBnK,EAAMwF,QAAQmE,WAAWS,YAAYL,IAEzC,IAAIR,EAAe5M,KAAK,IAAMqD,EAAM+D,aAAad,WAC7CyG,EAAM/M,KAAK6K,EAAExH,EAAMoF,MAAQ,QAE3BmE,GAA0C,IAA1BA,EAAapE,WAA6C,IAA1BoE,EAAapE,UAC7DxI,KAAK,IAAMqD,EAAMgG,aAAaqE,YAAY,cAE1C1N,KAAK,IAAMqD,EAAMgG,aAAawD,SAAS,cAE3C7M,KAAK,IAAMqD,EAAMgG,aAAasD,OAE9B3M,KAAK,IAAMqD,EAAMoF,MAAQ,QAAQoE,SAAS,cAE1CO,EAAI/B,MAAMC,IAAOF,SAAS2B,EAAIC,WAAW3B,MAAMC,KAAOjI,EAAM8F,WAAa,EAAK,KAC9EiE,EAAI/B,MAAMS,KAAQV,SAAS2B,EAAIC,WAAW3B,MAAMS,MAAQzI,EAAM8F,WAAa,EAAK,KAChFiE,EAAI/B,MAAMY,MAASb,SAAS2B,EAAIC,WAAW3B,MAAMY,OAAS,EAAI5I,EAAM8F,WAAa,EAAK,KACtFiE,EAAI/B,MAAMI,OAAUL,SAAS2B,EAAIC,WAAW3B,MAAMI,QAAU,EAAIpI,EAAM8F,WAAa,EAAK,KAExF4D,EAAIC,WAAW3B,MAAM4B,OAAS5J,EAAMmG,qBACpCuD,EAAI1B,MAAMC,IAAOF,SAAS2B,EAAI1B,MAAMC,KAAOjI,EAAM8F,WAAc,KAC/D4D,EAAI1B,MAAMS,KAAQV,SAAS2B,EAAI1B,MAAMS,MAAQzI,EAAM8F,WAAc,KACjE4D,EAAI1B,MAAMY,MAASb,SAAS2B,EAAI1B,MAAMY,OAAS,EAAI5I,EAAM8F,WAAc,KACvE4D,EAAI1B,MAAMI,OAAUL,SAAS2B,EAAI1B,MAAMI,QAAU,EAAIpI,EAAM8F,WAAc,UAEtE,GAAuB,IAAnB9F,EAAMmF,UAAiB,CAG9B,IAAI4E,EAAMpN,KAAK6K,EAAExH,EAAMiG,iBAGnBsD,EAAe5M,KAAK,IAAMqD,EAAM+D,aAAad,aACH,IAA1BsG,EAAapE,YAAoBoE,GAAgBA,GAA0C,IAA1BA,EAAapE,WAAmBoE,EAAatD,gBAAkBjG,EAAMiG,eAClJ8D,GACApN,KAAK,IAAMqD,EAAMiG,gBAAgBoE,YAAY,cAAcf,OAI3DC,GAA0C,IAA1BA,EAAapE,WAAmB4E,GAChDpN,KAAK,IAAMqD,EAAMiG,gBAAgBuD,SAAS,cAG9CO,IACIL,EAAM/M,KAAK6K,EAAExH,EAAMoF,OACvB2E,EAAI/B,MAAMC,IAAMF,SAAS2B,EAAIC,WAAW3B,MAAMC,KAAO,KACrD8B,EAAI/B,MAAMS,KAAOV,SAAS2B,EAAIC,WAAW3B,MAAMS,MAAQ,WAEjC,IAAnBzI,EAAMmF,WAET3G,IAAIqE,SAASuC,QACbzI,KAAK,IAAM6B,IAAIqE,SAASuC,OAAOiF,YAAY,sBAC3C1N,KAAK,IAAM6B,IAAIqE,SAASuC,MAAQ,QAAQiF,YAAY,sBACpD1N,KAAK,IAAM6B,IAAIqE,SAASuC,OAAOoE,SAAS,sBACxC7M,KAAK,IAAM6B,IAAIqE,SAASuC,MAAQ,QAAQoE,SAAS,sBACjD7M,KAAK,IAAM6B,IAAIqE,SAASuC,OAAOkE,QAKvCtJ,EAAM0F,cACNlH,IAAIuE,QAAQ/C,EAAM0F,gBAI9B1F,EAAMsK,QAAU,GAChBtK,EAAM6D,OAAS,WACX,GAAI7D,EAAMkD,SAA8B,GAAnBlD,EAAM+E,UAAmB,CAC1C,GAAIpI,KAAK0M,UAAUrJ,EAAMsK,SACrB9L,IAAIuE,QAAQ/C,EAAMsK,aACf,CAaH,GAZuB,GAAnBtK,EAAMmF,WACNxI,KAAK,IAAMqD,EAAMoF,OAAO+D,IAAInJ,EAAMsF,SAGf,GAAnBtF,EAAMmF,WACNxI,KAAK,IAAM6B,IAAIqE,SAASuC,OAAOmF,OAGZ,IAAnBvK,EAAMmF,WAENxI,KAAK,IAAMqD,EAAM+F,gBAAgBwE,OAEd,IAAnBvK,EAAMmF,UAAiB,CACvBxI,KAAK,IAAMqD,EAAMoF,MAAQ,QAAQ0E,YAAY,eACzCJ,EAAM/M,KAAK6K,EAAExH,EAAMoF,MAAQ,SAC3BuE,WAAW3B,MAAM4B,OAAS,EAC9BF,EAAI1B,MAAMC,IAAOF,SAAS2B,EAAI1B,MAAMC,KAAOjI,EAAM8F,WAAc,KAC/D4D,EAAI1B,MAAMS,KAAQV,SAAS2B,EAAI1B,MAAMS,MAAQzI,EAAM8F,WAAc,KACjE4D,EAAI1B,MAAMY,MAASb,SAAS2B,EAAI1B,MAAMY,OAAS,EAAI5I,EAAM8F,WAAc,KACvE4D,EAAI1B,MAAMI,OAAUL,SAAS2B,EAAI1B,MAAMI,QAAU,EAAIpI,EAAM8F,WAAc,KACzEnJ,KAAK,IAAMqD,EAAMoF,OAAOmF,OACxB,IAAIV,EAAUlN,KAAK6K,EAAExH,EAAMoF,OAC3ByE,EAAQF,WAAW3B,MAAM4B,OAAS,EAClCC,EAAQ7B,MAAMC,IAAOF,SAAS8B,EAAQ7B,MAAMC,KAAOjI,EAAM8F,WAAc,KACvE+D,EAAQ7B,MAAMS,KAAQV,SAAS8B,EAAQ7B,MAAMS,MAAQzI,EAAM8F,WAAc,KACzE+D,EAAQ7B,MAAMY,MAASb,SAAS8B,EAAQ7B,MAAMY,OAAS,EAAI5I,EAAM8F,WAAc,KAC/E+D,EAAQ7B,MAAMI,OAAUL,SAAS8B,EAAQ7B,MAAMI,QAAU,EAAIpI,EAAM8F,WAAc,KAIjF,IAuBI4D,EAOR,GAhCuB,IAAnB1J,EAAMmF,YACNxI,KAAK,IAAMqD,EAAMoF,MAAQ,QAAQ0E,YAAY,WACzCJ,EAAM/M,KAAK6K,EAAExH,EAAMoF,MAAQ,SAC3BuE,WAAW3B,MAAM4B,OAAS,EAC9BF,EAAI1B,MAAMC,IAAOF,SAAS2B,EAAI1B,MAAMC,KAAOjI,EAAM8F,WAAc,KAC/D4D,EAAI1B,MAAMS,KAAQV,SAAS2B,EAAI1B,MAAMS,MAAQzI,EAAM8F,WAAc,KACjE4D,EAAI1B,MAAMY,MAASb,SAAS2B,EAAI1B,MAAMY,OAAS,EAAI5I,EAAM8F,WAAc,KACvE4D,EAAI1B,MAAMI,OAAUL,SAAS2B,EAAI1B,MAAMI,QAAU,EAAIpI,EAAM8F,WAAc,MAEtD,IAAnB9F,EAAMmF,WACNxI,KAAK,IAAMqD,EAAM8C,IAAIyH,OAAOT,YAAY,UAAUL,KAAK,SAAU,GAE9C,IAAnBzJ,EAAMmF,YACFqF,EAAe7N,KAAK,IAAMqD,EAAM4D,aAAaX,aACH,IAA1BuH,EAAarF,WAC7BxI,KAAK,IAAMqD,EAAMgG,aAAauE,OAGf,IAAnBvK,EAAMmF,aAEFqF,EAAe7N,KAAK,IAAMqD,EAAM4D,aAAaX,aACH,IAA1BuH,EAAarF,WAAmBqF,GAA0C,IAA1BA,EAAarF,WAC7ExI,KAAK,IAAMqD,EAAMgG,aAAauE,QAG9Bb,EAAM/M,KAAK6K,EAAExH,EAAMoF,MAAQ,SAC3BuE,WAAW3B,MAAM4B,OAAS,EAC9BF,EAAI1B,MAAMC,IAAOF,SAAS2B,EAAI1B,MAAMC,KAAOjI,EAAM8F,WAAc,KAC/D4D,EAAI1B,MAAMS,KAAQV,SAAS2B,EAAI1B,MAAMS,MAAQzI,EAAM8F,WAAc,KACjE4D,EAAI1B,MAAMY,MAASb,SAAS2B,EAAI1B,MAAMY,OAAS,EAAI5I,EAAM8F,WAAc,KACvE4D,EAAI1B,MAAMI,OAAUL,SAAS2B,EAAI1B,MAAMI,QAAU,EAAIpI,EAAM8F,WAAc,MAEtD,IAAnB9F,EAAMmF,UAAiB,CACvB,IAEIqF,EAFAT,EAAMpN,KAAK6K,EAAExH,EAAMiG,kBAEnBuE,EAAe7N,KAAK,IAAMqD,EAAM4D,aAAaX,aACH,IAA1BuH,EAAarF,WAAmBqF,GAAgBA,EAAavE,gBAAkBjG,EAAMiG,iBACjG8D,GACApN,KAAK,IAAMqD,EAAMiG,gBAAgBsE,OAKtB,IAAnBvK,EAAMmF,YACNxI,KAAK,IAAM6B,IAAIqE,SAASuC,OAAOiF,YAAY,sBAAsBb,SAAS,sBAAsBe,OAChG5N,KAAK,IAAM6B,IAAIqE,SAASuC,MAAQ,QAAQiF,YAAY,sBAAsBb,SAAS,uBAIvFxJ,EAAM2F,aACNnH,IAAIuE,QAAQ/C,EAAM2F,eAI9B3F,EAAMyK,QAAU,WACQ,GAAhBzK,EAAMoE,QAAmC,GAAjBpE,EAAMkD,SAAsC,GAAnBlD,EAAM+E,YACnD/E,EAAM0K,YAAc/N,KAAKgO,KAAOhO,KAAKgO,IAAIC,KACzCjO,KAAKgO,IAAIC,IAAIC,UAAU7K,EAAM0K,WAAWI,UAE5CtM,IAAIuE,QAAQ/C,EAAM4F,eAS9BjJ,KAAKoO,KAAO,aAGZpO,KAAKqO,OAAOrO,KAAKoO,KAAKjM,UAAW,CAC7BmM,GAAI,GACJC,QAAS,GACTC,MAAO,GACPC,WAAY,GACZC,KAAM,GACNC,UAAW,GACX7C,KAAM,GACN8C,UAAW,GACXlI,WAAY,GACZC,MAAO,GAEPkI,QAAS,GACTC,WAAY,GACZC,UAAW,GACXC,UAAW,GAEXC,aAAc,GACdC,gBAAiB,GACjBC,eAAgB,GAChBC,eAAgB,GAEhBC,aAAc,GACdC,QAAS,GACTC,YAAa,GACbC,OAAQ,GACRC,YAAa,GACbC,OAAQ,GACRC,UAAW,GACXC,KAAM,KAUV,IAAIC,OAAS,SAAUC,EAAIC,EAAIC,EAAQC,GACvBhQ,KACNiQ,EAAIJ,EADE7P,KAENkQ,EAAIJ,EAFE9P,KAGNwI,MAAQuH,EAHF/P,KAIN0J,WAAasG,GAQnBG,UAAY,SAAUC,GACtB,IAAKA,EAAK,OAAO,KACjB,IAAIC,EAAKD,EACLE,EAAKD,EAAGvI,QAAQ,IAAK,GACrByI,EAAKF,EAAGvI,QAAQ,IAAKwI,EAAK,GAC1BE,EAAKH,EAAGvI,QAAQ,IAAKyI,EAAK,GAC1BE,EAAKJ,EAAGvI,QAAQ,IAAK0I,EAAK,GAC1BE,EAAKL,EAAGvI,QAAQ,IAAK2I,EAAK,GAE1BR,EAAII,EAAGM,UAAUL,EAAK,EAAGC,GACzBL,EAAIG,EAAGM,UAAUJ,EAAK,EAAGC,GACzBI,EAAS,IACF,GAAPH,IACAG,EAASP,EAAGM,UAAUH,EAAK,EAAGC,IAElC,IAAII,EAAM,GAIV,OAHW,GAAPH,IACAG,EAAMR,EAAGM,UAAUF,EAAK,EAAGC,IAExB,IAAId,OAAOK,EAAGC,EAAGU,EAAQC,IAGpCjP,IAAIqE,SAAW,IAAIlG,KAAKmI,WAGxBnI,KAAK+Q,GAAG1C,OAAO,CAKX/H,SAAU,WAEN,OADYrG,KACF,IADEA,KACU,GAAG+Q,SADb/Q,KAEK,GAAG+Q,SAEb,MAMXC,YAAa,WACT,IAAI5N,EAAQpD,KACRiR,EAAU7N,EAAM6N,QACpB,GAAI7N,EAAM,IAAMA,EAAM,GAAG2N,SACrB3N,EAAM,GAAG2N,SAASzK,gBACf,GAAI2K,GAAWlR,KAAKmR,QAAQD,GAC/B,IAAK,IAAI/Q,KAAK+Q,EAAS,CACnB,IAAIE,EAAMpR,KAAKmD,gBAAgB+N,EAAQ/Q,IACnCiR,GAAOA,EAAIJ,WACXI,EAAIJ,SAASzK,YAIzB,OAAOlD,GAMXgO,aAAc,WACV,IAAIhO,EAAQpD,KACRiR,EAAU7N,EAAM6N,QACpB,GAAI7N,EAAM,IAAMA,EAAM,GAAG2N,SACrB3N,EAAM,GAAG2N,SAASzK,gBACf,GAAI2K,GAAWlR,KAAKmR,QAAQD,GAC/B,IAAK,IAAI/Q,KAAK+Q,EAAS,CACnB,IAAIE,EAAMpR,KAAKmD,gBAAgB+N,EAAQ/Q,IACnCiR,GAAOA,EAAIJ,WACXI,EAAIJ,SAASzK,YAIzB,OAAOlD,GAEXiO,SAAU,WACN,IACIJ,EADQjR,KACQiR,QAChBK,EAAO,GACPC,EAAU,KAEVN,GAAWlR,KAAKmR,QAAQD,GACxBK,EAAOL,EACAA,GAAkC,WAAvBlR,KAAK8H,KAAKoJ,IAE5BK,EAAKE,KAAKP,GAEd,IAAK,IAAI/Q,EAAI,EAAGA,EAAIoR,EAAKpM,OAAQhF,IAAK,CAClC,IAAIuR,EAAS,KACTvL,EAAK,GACLiL,EAAMG,EAAKpR,GACf,GAAIiR,IAAQjL,EAAKiL,EAAIjL,KAAQnG,KAAKwH,KAAKrB,IAA+B,GAAvBA,EAAG4B,QAAQ,WAAkB2J,EAASrE,SAASsE,eAAexL,IAAM,CAC/G,IAAIyL,EAAQ,IAAI5R,KAAKmI,WACrByJ,EAAMzL,GAAKqL,EAAUrL,EACrB,IAAI0L,EAAWzB,UAAUjK,GACzByL,EAAMtJ,OAASuJ,EAAS3B,EACxB0B,EAAMrJ,OAASsJ,EAAS1B,EACpB0B,EAASlI,YAAc3J,KAAK,IAAM6R,EAASlI,YAAY,KACvDiI,EAAME,WAAa9R,KAAK,IAAM6R,EAASlI,YAAY,IAGvDiI,EAAMnJ,MAAQzI,KAAKwH,KAAKqK,EAASpJ,OAEjCmJ,EAAMjJ,QAAU3I,KAAK,IAAM4R,EAAMnJ,OAAO+D,MAExCoF,EAAMrL,QAAU6K,EAAI7K,YAEpBqL,EAAM3I,WAAamI,EAAInI,YAAc,GAErC2I,EAAMlJ,QAAU0I,EAAI1I,SAAW,GAE/BkJ,EAAM9I,SAAWsI,EAAItI,UAAY,KAEjC8I,EAAMpJ,UAAY4I,EAAI5I,WAAa,EAEnCoJ,EAAMzI,WAAaiI,EAAIjI,YAAc,EAErCyI,EAAMvI,YAAc+H,EAAI/H,aAAe,cAEvCuI,EAAMtI,eAAiB8H,EAAI9H,gBAAkB,iBAE7CsI,EAAMrI,eAAiB6H,EAAI7H,gBAAkB,IAE7CqI,EAAMpI,qBAAuB4H,EAAI5H,sBAAwB,IAEzDoI,EAAMnI,UAAY2H,EAAI3H,WAAa,IAEnCmI,EAAMlI,gBAAkB0H,EAAI1H,iBAAmB,IAE/CkI,EAAMjI,WAAayH,EAAIzH,WAEvBiI,EAAMhI,SAAWwH,EAAIxH,SAErBgI,EAAM9H,cAAgBsH,EAAItH,cAE1B8H,EAAM/H,YAAcuH,EAAIvH,YAExB+H,EAAM7H,eAAiBqH,EAAIrH,mBAE3B6H,EAAM5H,kBAAoBoH,EAAIpH,sBAE9B4H,EAAM3H,gBAAkBmH,EAAInH,oBAE5B2H,EAAM1H,WAAakH,EAAIlH,YAAc,EAErC0H,EAAMzH,gBAAkBiH,EAAIjH,iBAAmB,EAE/CyH,EAAMxH,gBAAkBgH,EAAIhH,iBAAmB,EAE/CwH,EAAMvH,cAAgB+G,EAAI/G,eAAiB,EAE3CuH,EAAMtH,eAAiB8G,EAAI9G,gBAAkB,EAE7CsH,EAAMrH,kBAAoB6G,EAAI7G,mBAAqB,KAEnDqH,EAAM/Q,KAAOuQ,EAAIvQ,MAAQ,GAEzB+Q,EAAM7I,aAAeqI,EAAIrI,cAAgB,GAEzC6I,EAAM5I,YAAcoI,EAAIpI,aAAe,GAEvC4I,EAAMG,WAAaX,EAAIW,YAAc,GAErCH,EAAMxI,eAAiBgI,EAAIhI,gBAAkB,GAE7CwI,EAAMnF,SAAW2E,EAAI3E,UAAY,GAEjCmF,EAAMjE,QAAUyD,EAAIzD,SAAW,GAI/B,IAAIqE,EAAW,IAAIhS,KAAKoO,KACxB4D,EAASrL,MAAQyK,EAAIzK,OAAS,GAC9BqL,EAAStL,WAAa0K,EAAI1K,YAAc,GACxCsL,EAASlG,KAAOsF,EAAItF,MAAQ,GAC5BkG,EAASxD,MAAQ4C,EAAI5C,OAAS,GAC9BwD,EAAS1D,GAAK8C,EAAI9C,IAAM,GACxB0D,EAAStD,KAAO0C,EAAI1C,MAAQ,GAC5BsD,EAASnD,QAAUuC,EAAIvC,SAAW,GAClCmD,EAASjD,UAAYqC,EAAIrC,WAAa,GACtCiD,EAAShD,UAAYoC,EAAIpC,WAAa,GACtCgD,EAASlD,WAAasC,EAAItC,YAAc,GACxCkD,EAASzD,QAAU6C,EAAI7C,SAAW,GAClCyD,EAASrD,UAAYyC,EAAIzC,WAAa,GACtCqD,EAASpD,UAAYwC,EAAIxC,WAAa,GACtCoD,EAASvD,WAAa2C,EAAI3C,YAAc,GACxCuD,EAAS/C,aAAemC,EAAInC,cAAgB,GAC5C+C,EAAS9C,gBAAkBkC,EAAIlC,iBAAmB,GAClD8C,EAAS7C,eAAiBiC,EAAIjC,gBAAkB,GAChD6C,EAAS5C,eAAiBgC,EAAIhC,gBAAkB,GAChD4C,EAAS3C,aAAe+B,EAAI/B,cAAgB,GAC5C2C,EAAS1C,QAAU8B,EAAI9B,SAAW,GAClC0C,EAASzC,YAAc6B,EAAI7B,aAAe,GAC1CyC,EAASxC,OAAS4B,EAAI5B,QAAU,GAChCwC,EAASvC,YAAc2B,EAAI3B,aAAe,GAC1CuC,EAAStC,OAAS0B,EAAI1B,QAAU,GAChCsC,EAASrC,UAAYyB,EAAIzB,WAAa,GACtCqC,EAASpC,KAAOwB,EAAIxB,MAAQ,GAC5B1M,WAAWiD,GAAM6L,EACjBJ,EAAMhJ,OAASoJ,EAIfJ,EAAMxJ,cACNwJ,EAAM/I,QAAU6I,GACTV,SAAWY,EAClBzO,gBAAgBgD,GAAMuL,GAG9B,OAAOF,EAAUxR,KAAK,IAAIwR,GArIdvR,MA2IhBoH,QAAS,WACL,IAAI2J,EAAW/Q,KAAKqG,WAIpB,OAHI0K,GACAA,EAAS3J,UAENpH,QAKf,IAAIgS,qBAAuB,SAAvBA,qBAAiCC,KACjC,IAAI7M,QAAUrF,KAAKqF,QAAQ6M,KACvBC,QAAUnS,KAAK6B,IAAIuD,eAAeC,SACtC,GAAe,KAAXA,QACA,IACI,IAAI+M,SAAWC,QAAQC,WACvB,GAAItS,KAAK0M,UAAU0F,UAAW,CAC1B,IAAIG,IAAMtK,KAAK,IAAMmK,SAAW,KACrB,MAAPG,KAA2B,mBAAZA,IAAIzK,MACf9H,KAAK,YAAY,IACjBA,KAAK,YAAYwM,IAAIxM,KAAKwS,WAIxC,MAAO7P,IAGb,OAAQwP,SACJ,IAAK,KACDnS,KAAK6B,IAAIqE,SAAS4H,UAClB,MACJ,IAAK,MACL,IAAK,MACL,IAAK,QACL,IAAK,OACL,IAAK,OACL,IAAK,MACL,IAAK,QACL,IAAK,QACL,IAAK,OACL,IAAK,OACL,IAAK,MACD9N,KAAK6B,IAAI6D,UAAUyM,SACnB,MACJ,IAAK,OACL,IAAK,QACL,IAAK,KACL,IAAK,OAED,GADAnS,KAAK6B,IAAI+E,UAAUuL,SACfD,IAEA,OADAA,IAAIO,oBAGJ,GAAIC,MAEA,OADAA,MAAMC,gBAAc,EAI5B,MACJ,IAAK,YACL,IAAK,WACL,IAAK,OACD,IACQT,IACAA,IAAIO,iBAEAC,QACAA,MAAMC,gBAGhB,MAAOhQ,IAKT,OAHI3C,KAAK6F,WAAW7F,KAAK6B,IAAI+Q,WACzB5S,KAAK6B,IAAI+Q,gBAUzB5S,KAAKqN,UAAUwF,iBAAiB,UAAWZ,sBAErB,WAAlBxP,QAAO7C,SAAuBA,QAAoC,WAA1B6C,QAAO7C,OAAOD,SACtDC,OAAOD,QAAUK,MAGbF,6BAAe,GAAf0C,8BAAA,WACI,OAAOxC,MADX8S,MAAAnT,QAAA4C,uCAAAC,gCAAA5C,OAAAD,QAAA6C,gCAMc,qBAAXQ,OAAP,YAAAP,QAAOO,UAAkD,WAA3BP,QAAOO,OAAOqK,YAC5CrK,OAAOhD,KAAOgD,OAAO6H,EAAI7K,MA9sCjC,CAitCGgD,OAAQhD,qFCvtCXJ,EAAAD,QAAA,SAAAC,GAoBA,OAnBAA,EAAAmT,kBACAnT,EAAAoT,UAAA,aACApT,EAAAqT,MAAA,GAEArT,EAAAsT,WAAAtT,EAAAsT,SAAA,IACAlS,OAAAC,eAAArB,EAAA,UACAsB,cACAC,IAAA,WACA,OAAAvB,EAAAW,KAGAS,OAAAC,eAAArB,EAAA,MACAsB,cACAC,IAAA,WACA,OAAAvB,EAAAO,KAGAP,EAAAmT,gBAAA,GAEAnT,kBCpBAA,EAAAD,QAAAO","file":"iptv-key-1.0.1.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"morgan-iptv-core\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"morgan-iptv-core\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"iptv\"] = factory(require(\"morgan-iptv-core\"));\n\telse\n\t\troot[\"iptv\"] = factory(root[\"iptv\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE__2__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\r\n * Created by cherish on 2017/12/14.\r\n */\r\nimport iptv from 'morgan-iptv-core'\r\n\r\n\r\n(function (window, iptv) {\r\n\r\n    /**\r\n     * 用于保存所有区域的键值\r\n     */\r\n    var keyList = iptv.keyList = [],\r\n        /**\r\n         * 焦点方向池\r\n         * @type {Array}\r\n         */\r\n        focusDires = iptv.focusDires = [],\r\n        /**\r\n         * 焦点池\r\n         * @type {Array}\r\n         */\r\n        focusCollection = iptv.focusCollection = [],\r\n        /**\r\n         * 遥控器所有按键\r\n         */\r\n        keys = iptv.keys = function () {\r\n            var this_ = this;\r\n            this_.UP = \"UP\";\r\n            this_.DOWN = \"DOWN\";\r\n            this_.LEFT = \"LEFT\";\r\n            this_.RIGHT = \"RIGHT\";\r\n            this_.OK = \"OK\";\r\n            this_.BACK = \"BACK\";\r\n            this_.ZERO = \"ZERO\";\r\n            this_.ONE = \"ONE\";\r\n            this_.TWO = \"TWO\";\r\n            this_.THREE = \"THREE\";\r\n            this_.FOUR = \"FOUR\";\r\n            this_.FIVE = \"FIVE\";\r\n            this_.SIX = \"SIX\";\r\n            this_.SEVEN = \"SEVEN\";\r\n            this_.EIGHT = \"EIGHT\";\r\n            this_.NINE = \"NINE\";\r\n            this_.OUT_PAGE = \"OUT_PAGE\";\r\n            this_.HOME_PAGE = \"HOME_PAGE\";\r\n            this_.STOP = \"STOP\";\r\n            this_.MENU = \"MENU\";\r\n            this_.DEL = \"DEL\";\r\n            this_.PAGEDOWN = \"PAGEDOWN\";\r\n            this_.PAGEUP = \"PAGEUP\";\r\n        },\r\n\r\n        key = iptv.key = {\r\n            /**\r\n             * 是否禁用方向按键，默认不禁用\r\n             */\r\n            displayDire: false,\r\n            /**\r\n             * 上一个焦点按键方向\r\n             */\r\n            lastDire: '',\r\n            /**\r\n             * 添加区域键值对象\r\n             * @param areaName  区域名称\r\n             * @param keyObj    键值对象\r\n             */\r\n            addKey: function (areaName, keyObj) {\r\n                var ii = 0;\r\n                for (var i in keyObj) {\r\n                    ++ii;\r\n                }\r\n                keyObj.length = ii + 10000;\r\n                iptv.keyList[areaName + \"\"] = keyObj;\r\n            },\r\n            /**\r\n             * 根据key值，获取key值对于的名称\r\n             * @param keyCode   key值\r\n             * @returns {*}\r\n             */\r\n            getKeyCodeName: function (keyCode) {\r\n                //循环区域\r\n                for (var i in iptv.keyList) {\r\n                    var sii = 0;\r\n                    //循环区域对应的键值对象\r\n                    for (var kn in iptv.keyList[i]) {\r\n                        ++sii;\r\n                        if (iptv.keyList[i][kn] == keyCode) {\r\n                            return kn;\r\n                        }\r\n                        //下面的做法是兼容创维的盒子，因为他们不支持双重循环，需要手动break;\r\n                        if (sii >= (iptv.keyList[i].length - 10000)) {\r\n                            var version = iptv.STBType();\r\n                            //为了兼容创维盒子，创维盒子有的需要手动break才能跳出内部循环，有的创维盒子反而手动break了，就不能跳出循环了，妈的坑货\r\n                            if (version != \"E1100\" && version != \"ITV218.1\") {\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                return '';\r\n            },\r\n\r\n            /**\r\n             * 根据字符匹配对应数据\r\n             * @param num_\r\n             */\r\n            numChange: function (num_) {\r\n                var num = \"\";\r\n                switch (num_) {\r\n                    case \"ONE\" :\r\n                        num = 1;\r\n                        break;\r\n                    case \"TWO\" :\r\n                        num = 2;\r\n                        break;\r\n                    case \"THREE\" :\r\n                        num = 3;\r\n                        break;\r\n                    case \"FOUR\" :\r\n                        num = 4;\r\n                        break;\r\n                    case \"FIVE\" :\r\n                        num = 5;\r\n                        break;\r\n                    case \"SIX\" :\r\n                        num = 6;\r\n                        break;\r\n                    case \"SEVEN\" :\r\n                        num = 7;\r\n                        break;\r\n                    case \"EIGHT\" :\r\n                        num = 8;\r\n                        break;\r\n                    case \"NINE\" :\r\n                        num = 9;\r\n                        break;\r\n                    case \"ZERO\" :\r\n                        num = 0;\r\n                        break;\r\n                    case \"DEL\" :\r\n                        num = \"DEL\";\r\n                        break;\r\n                    default :\r\n                        num = \"\";\r\n                        break;\r\n                }\r\n                if (iptv.isFunction(iptv.key.numEvent)) {\r\n                    iptv.key.numEvent(num);\r\n                }\r\n            },\r\n            /**\r\n             * 方向具体处理细节\r\n             * @param dire\r\n             */\r\n            direHandle: function (dire) {\r\n                key.lastDire = dire;\r\n                var fDires = focusDires[key.curFocus.id];\r\n                if (fDires) {\r\n                    // 由于当前方法是用来往右移动的，只需判断是否有右方的focusID\r\n                    // 当前焦点，往某方向按键时具有优先执行，如果指定了方向事件，就不会切换当前焦点，而去执行事件\r\n                    if (fDires[dire + \"Event\"]) {\r\n                        key.exeCode(fDires[dire + \"Event\"]);\r\n                        return;\r\n                    } else if (fDires[dire]) {\r\n                        // 如果往下移动被赋值了disable说明啥都不操作\r\n                        if (fDires[dire] == \"disable\") {\r\n                            key.lastDire = \"\";\r\n                            return;\r\n                        }\r\n                        // 通过focusID找到焦点对象\r\n                        var nextNode = iptv(\"#\" + fDires[dire]).getFocus();\r\n                        if (nextNode && nextNode.enFocus == true) {\r\n                            key.changeFocus(fDires[dire]);\r\n                            return;\r\n                            //如果原本设置的按钮被禁用了，倘若设置了downOther值，就让此按钮获得焦点\r\n                        } else if (nextNode && nextNode.enFocus == false && fDires[dire + \"OtherEvent\"]) {\r\n\r\n                            key.exeCode(fDires[dire + \"OtherEvent\"]);\r\n                            return;\r\n                        } else if (nextNode && nextNode.enFocus == false && fDires[dire + \"Other\"]) {\r\n                            // 通过focusID找到焦点对象\r\n                            var otherNode = iptv(\"#\" + fDires[dire + \"Other\"]).getFocus();\r\n                            if (otherNode && otherNode.enFocus == true) {\r\n                                key.changeFocus(fDires[dire + \"Other\"]);\r\n                                return;\r\n                            }\r\n                        } else if (!nextNode && fDires[dire + \"NoEvent\"]) {\r\n                            //如果右边制定了left焦点，但是这个left焦点不在焦点池中，可以自定义事件\r\n                            key.exeCode(fDires[dire + \"NoEvent\"]);\r\n                            return;\r\n                        } else if (!nextNode && fDires[dire + \"No\"]) {\r\n                            // 通过focusID找到焦点对象\r\n                            var otherNode = iptv(\"#\" + fDires[dire + \"No\"]).getFocus();\r\n                            if (otherNode && otherNode.enFocus == true) {\r\n                                key.changeFocus(fDires[dire + \"No\"]);\r\n                                return;\r\n                            }\r\n                        }\r\n                    } else if (fDires.otherEvent) {\r\n                        key.exeCode(fDires.otherEvent);\r\n                        return;\r\n                    } else if (fDires.other) {\r\n                        if (fDires.other == \"disable\") {\r\n                            key.lastDire = \"\";\r\n                            return;\r\n                        }\r\n                        // 通过focusID找到焦点对象\r\n                        var nextNode = iptv(\"#\" + fDires.other).getFocus();\r\n                        if (nextNode && nextNode.enFocus == true) {\r\n                            key.changeFocus(fDires.other);\r\n                            return;\r\n                        }\r\n                    }\r\n                }\r\n                key.lastDire = \"\";\r\n            },\r\n            /**\r\n             * 上下左右控制具体方向处理函数\r\n             * @param direType\r\n             */\r\n            focusHand: function (direType) {\r\n                if (key.displayDire == false) {\r\n                    switch (direType) {\r\n                        case \"UP\" :\r\n                        case \"DOWN\" :\r\n                        case \"LEFT\" :\r\n                        case \"RIGHT\" :\r\n                            key.direHandle(direType.toLowerCase());\r\n                        default :\r\n                            break;\r\n                    }\r\n                }\r\n            },\r\n\r\n            /**\r\n             * 切换焦点方法\r\n             * @param focusId_\r\n             * @returns {*}\r\n             */\r\n            changeFocus: function (focusId_) {\r\n                // 通过focusID找到焦点对象\r\n                var nextNode = iptv(\"#\" + focusId_).getFocus();\r\n                if (nextNode) {\r\n                    var oldFocus = key.curFocus;\r\n                    //在让老焦点失去焦点之前，告诉老焦点下一个当前焦点的id\r\n                    oldFocus.nextFocusId = focusId_;\r\n                    // 切换新焦点之前，需要执行失去焦点事件\r\n                    oldFocus.onBlur();\r\n                    var fid = oldFocus.id;\r\n                    // 给当前焦点重新赋值\r\n                    key.curFocus = nextNode;\r\n                    //在让新焦点获取焦点之前，告诉新焦点上一个焦点的id\r\n                    key.curFocus.lastFocusId = fid;\r\n                    key.curFocus.onFocus();\r\n                    return nextNode;\r\n                }\r\n\r\n            },\r\n\r\n            /**\r\n             * 跳转链接\r\n             * @param url\r\n             */\r\n            redirect: function (url) {\r\n                if (url && iptv.trim(url)) {\r\n                    // 如果禁用了按键，就不执行\r\n                    if (key.curFocus.enable == true) {\r\n                        // 如果执行了页面跳转，就禁止再次点击跳转\r\n                        key.curFocus.enable = false;\r\n                        window.location.href = url;\r\n                    }\r\n                }\r\n            },\r\n            /**\r\n             * 执行JavaScript代码\r\n             * @param _code\r\n             */\r\n            exeCode: function (_code) {\r\n                if (_code) {\r\n                    var code = _code;\r\n                    try {\r\n                        if (iptv.type(_code) === \"string\" && iptv.trim(_code)) {\r\n                            if (code.indexOf(\"javascript:\") == 0) {\r\n                                code = code.replace(\"javascript:\", \"\");\r\n                                eval(code);\r\n                            } else if (code.indexOf(\"http://\") == 0) {\r\n                                key.redirect(code);\r\n                            }\r\n                        } else if (iptv.type(_code) === \"function\") {\r\n                            _code.call(key.curFocus);\r\n                        }\r\n\r\n                    } catch (e) {\r\n                        iptv.error(e);\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n    ;\r\n\r\n    //添加常用键值对象\r\n    key.addKey(\"HH\", {\r\n        UP: 38,\r\n        DOWN: 40,\r\n        LEFT: 37,\r\n        RIGHT: 39,\r\n        OK: 13,\r\n        BACK: 8,\r\n        ZERO: 48,\r\n        ONE: 49,\r\n        TWO: 50,\r\n        THREE: 51,\r\n        FOUR: 52,\r\n        FIVE: 53,\r\n        SIX: 54,\r\n        SEVEN: 55,\r\n        EIGHT: 56,\r\n        NINE: 57,\r\n        DEL: 46,\r\n        PAGEDOWN: 34,\r\n        PAGEUP: 33\r\n    });\r\n    //添加华为机顶盒\r\n    key.addKey(\"HW\", {\r\n        UP: 38,\r\n        DOWN: 40,\r\n        LEFT: 37,\r\n        RIGHT: 39,\r\n        OK: 13,\r\n        BACK: 8,\r\n        ZERO: 48,\r\n        ONE: 49,\r\n        TWO: 50,\r\n        THREE: 51,\r\n        FOUR: 52,\r\n        FIVE: 53,\r\n        SIX: 54,\r\n        SEVEN: 55,\r\n        EIGHT: 56,\r\n        NINE: 57,\r\n        DEL: 1131,\r\n        PAGEDOWN: 34,\r\n        PAGEUP: 33\r\n    });\r\n    //添加南京广电机顶盒\r\n    key.addKey(\"NJGD\", {BACK: 640, HOME_PAGE: 113, OUT_PAGE: 114, DEL: 127});\r\n    //添加北京歌华机顶盒\r\n    key.addKey(\"BJGH\", {\r\n        UP: 1,\r\n        DOWN: 2,\r\n        LEFT: 3,\r\n        RIGHT: 4,\r\n        OK: 13,\r\n        BACK: 340,\r\n        ZERO: 48,\r\n        ONE: 49,\r\n        TWO: 50,\r\n        THREE: 51,\r\n        FOUR: 52,\r\n        FIVE: 53,\r\n        SIX: 54,\r\n        SEVEN: 55,\r\n        EIGHT: 56,\r\n        NINE: 57,\r\n        OUT_PAGE: 339,\r\n        HOME_PAGE: 512,\r\n        STOP: 1025,\r\n        MENU: 513\r\n    });\r\n\r\n\r\n    /**\r\n     * 焦点构造函数\r\n     * @constructor\r\n     */\r\n    iptv.FocusModel = function () {\r\n        var this_ = this;\r\n        // 焦点描述名称\r\n        this_.name = '';\r\n        // 是否开启按ok键\r\n        this_.enable = true;\r\n        // 是否允许此焦点对象获得焦点\r\n        this_.enFocus = true;\r\n        //该按钮是否被当前页面生成，默认未生成，作用防止开发者直接new FocusModel()\r\n        this_.isCreated = false;\r\n        // 焦点编号，判断是否同一个焦点,非空\r\n        this_.id = \"\";\r\n        // 将自己的对象赋给此属性\r\n        this_.own = this_;\r\n        //坐标\r\n        this_.X_Posi = 0;\r\n        this_.Y_Posi = 0;\r\n        this_.focusType = 7;\r\n        //指向的图片的id\r\n        this_.imgID = \"\";\r\n        // 图片切换使用，新图片地址\r\n        this_.newSwap = \"\";\r\n        // 原始图片\r\n        this_.oldSwap = \"\";\r\n        // 当前焦点上下左右，四个方向应该走的focusID数组\r\n        this_.dieArr = null;\r\n        // 对应的DOM对象\r\n        this_.nodeObj = null;\r\n        // 临时数据储存\r\n        this_.tempData = null;\r\n        // 在默认获得焦点事件上添加其他执行事件\r\n        this_.onFocusEvent = \"\";\r\n        // 在默认失去焦点事件上添加额外的执行事件\r\n        this_.onBlurEvent = \"\";\r\n        // 按确定的跳转地址\r\n        this_.clickEvent = \"\";\r\n        this_.interval = null;\r\n        //焦点获取焦点时，图标变大的大小，默认20\r\n        this_.changeSize = 10;\r\n        //移动选中框，此选中框是用户自己在html中写出，并指定id,对应效果知识移动选中框位置，不存在动画，对应focusType为10\r\n        this_.selectBorderId = '';\r\n        //移动选中框id,此选中框是代码自动生成的元素，对应效果选中框放大与平移动画，对应focusType为15或16\r\n        this_.selectionID = \"selectionID\";\r\n        //移动选中框id，此选中框是用户自己要在html中指定元素的id，对应效果是平移选中框，不存在放大动画，与selectBorderId的区别就是它是控制位置没有动画，selectionObjId是控制位置有动画，对应focusTypeId为17\r\n        this_.selectionObjID = \"selectionObjID\";\r\n        //对应展示图片的层次大小\r\n        this_.focusImgZIndex = 998;\r\n        //对应展示图片的父级元素的层次大小\r\n        this_.focusImgParentZIndex = 998;\r\n        //对应焦点内部图片的层次大小\r\n        this_.imgZIndex = 999;\r\n        //对应焦点内部图片的父级元素的层次大小\r\n        this_.imgParentZIndex = 999;\r\n        //焦点的父节点的ID值\r\n        this_.upParentId = '';\r\n        //用于控制可观看区域的节点ID值\r\n        this_.upAreaId = '';\r\n        this_.rightAreaId = '';\r\n        this_.rightParentId = '';\r\n        //是否开启父容器滚动，默认为false，不滚动\r\n        this_.enUpParentRoll = false;\r\n        this_.enRightParentRoll = false;\r\n\r\n        //开启整页滚动\r\n        this_.enRightPageRoll = false;\r\n        //当前焦点索引\r\n        this_.focusIndex = 0;\r\n        //当前焦点对应的当前页\r\n        this_.focusCurPageNum = 0;\r\n        //当前焦点对应的总页数\r\n        this_.focusAllPageNum = 0;\r\n        //当前焦点需要整页滚动的left值\r\n        this_.focusLeftRoll = 0;\r\n        //当前焦点列表中第一个焦点的left值\r\n        this_.focusFirstLeft = 0;\r\n        //当前焦点对应页码的所有焦点id,该值为数组对象\r\n        this_.focusPageAllModel = null;\r\n        //当前焦点对应页码的所有焦点图片是否已经加载过\r\n        this_.focusPageAllLoad = false;\r\n        this_.lastFocusId = '';\r\n\r\n\r\n        this_.init = function () {\r\n            key.curFocus = this_.own;\r\n            //处理父容器滚动\r\n            if (this_.enUpParentRoll || this_.enRightParentRoll) {\r\n                //获取父容器ID\r\n                var upParentId = this_.upParentId;\r\n                //控制可观看区域容器的ID\r\n                var upAreaId = this_.upAreaId;\r\n\r\n                var rightParentId = this_.rightParentId;\r\n                var rightAreaId = this_.rightAreaId;\r\n\r\n                var upParentObj = iptv.$(upParentId);\r\n                var upAreaObj = iptv.$(upAreaId);\r\n                var rightParentObj = iptv.$(rightParentId);\r\n                var rightAreaObj = iptv.$(rightAreaId);\r\n                //如果是按上或按下，只会用到rightParentId和rightAreaId\r\n                if (key.lastDire == 'down' && this_.enUpParentRoll == true) {\r\n                    //页面被滚去的高度\r\n                    // var parRollHeight = areaObj.scrollTop || parseInt(parentObj.style.top) || 0;\r\n                    var parRollHeight = Math.abs(parseInt(upParentObj.style.top)) || 0;\r\n                    //可观看区域容器实际可存放内容的高度\r\n                    var parHeight = upAreaObj.clientHeight || parseInt(upAreaObj.style.height) || 0;\r\n                    //焦点的top值\r\n                    var focusTop = parseInt(this_.Y_Posi);\r\n                    //如果没有手动赋值，那么就获取top值\r\n                    if (iptv.isNull(focusTop) || focusTop == 0) {\r\n                        focusTop = this_.nodeObj ? Math.abs(parseInt(this_.nodeObj.style.top)) : 0;\r\n                    }\r\n                    //焦点实际占位高度\r\n                    //var focusHeight = this_.nodeObj ? this_.nodeObj.offsetHeight : parseInt(this_.nodeObj.style.height);\r\n                    var focusHeight = this_.nodeObj ? parseInt(this_.nodeObj.style.height) : 0;\r\n                    //被滚去的高度+父容器实际可存放内容的高度\r\n                    var parA = parRollHeight + parHeight;\r\n                    //焦点的TOP值+焦点实际占位的高度\r\n                    var focB = focusTop + focusHeight;\r\n                    //如果后者大于前者，那么说明当前焦点在可观察区域的下面，所以这时需要考虑父容器需要往下滚多少距离，才能让当前焦点被显示出来\r\n                    if (parA < focB) {\r\n                        //获取当前焦点被遮挡的高度+当前父容器已经滚去的高度，就能得到现在父容器需要总的滚动高度\r\n                        var rollHeight = focB - parA + parRollHeight;\r\n                        upParentObj.style.top = \"-\" + rollHeight + \"px\";\r\n                        //*****************************左右上下滚动需要统一监控，用于动态加载图片，目前时间问题，没有继续开发，此处留做后期升级****************************/\r\n                    }\r\n                }\r\n\r\n                if (key.lastDire == 'up' && this_.enUpParentRoll == true || key.lastDire == 'right' && this_.enUpParentRoll == true || key.lastDire == 'down' && this_.enUpParentRoll == true) {\r\n                    //页面被滚去的高度\r\n                    // var parRollHeight = areaObj.scrollTop || parseInt(parentObj.style.top) || 0;\r\n                    var parRollHeight = Math.abs(parseInt(upParentObj.style.top)) || 0;\r\n                    //焦点的top值\r\n                    var focusTop = parseInt(this_.Y_Posi);\r\n                    //如果没有手动赋值，那么就获取top值\r\n                    if (iptv.isNull(focusTop) || focusTop == 0) {\r\n                        focusTop = this_.nodeObj ? Math.abs(parseInt(this_.nodeObj.style.top)) : 0;\r\n                    }\r\n                    //页面被滚去的高度\r\n                    var parA = parRollHeight;\r\n                    //焦点的TOP值\r\n                    var focB = focusTop;\r\n                    //如果焦点的TOP值小于当前被滚去的高度，那么说明此时需要往下滚\r\n                    if (parA > focB) {\r\n                        //如果需要父容器往下滚，那么滚去的高度就是焦点的TOP值\r\n                        var rollHeight = focB;\r\n                        upParentObj.style.top = \"-\" + rollHeight + \"px\";\r\n                        //*****************************左右上下滚动需要统一监控，用于动态加载图片，目前时间问题，没有继续开发，此处留做后期升级****************************/\r\n                    }\r\n                }\r\n\r\n                if (iptv.lastDire == 'right' && this_.enRightParentRoll == true) {\r\n                    //页面被滚去的宽度\r\n                    var parRollWidth = Math.abs(parseInt(rightParentObj.style.left)) || 0;\r\n                    //可观看区域容器实际可存放内容的高度\r\n                    var parWidth = rightAreaObj.clientWidth || parseInt(rightAreaObj.style.width) || 0;\r\n                    //焦点的left值\r\n                    var focusLeft = parseInt(this_.X_Posi);\r\n                    //如果没有手动赋值，那么就获取left值\r\n                    if (iptv.isNull(focusLeft) || focusLeft == 0) {\r\n                        focusLeft = this_.nodeObj ? Math.abs(parseInt(this_.nodeObj.style.left)) : 0;\r\n                    }\r\n                    //焦点实际占位宽度\r\n                    // var focusWidth = this_.nodeObj ? this_.nodeObj.offsetWidth : parseInt(this_.nodeObj.style.width);\r\n                    var focusWidth = this_.nodeObj ? parseInt(this_.nodeObj.style.width) : 0;\r\n                    //被滚去的宽度+父容器实际可存放内容的宽度\r\n                    var parA = parRollWidth + parWidth;\r\n                    ///页面被滚去的宽度\r\n                    var parB = parRollWidth;\r\n                    //焦点的LEFT值+焦点实际占位的宽度\r\n                    var focB = focusLeft + focusWidth;\r\n                    //如果后者大于前者，那么说明当前焦点在可观察区域的右边，所以这时需要考虑父容器需要往左滚多少距离，才能让当前焦点被显示出来\r\n                    if (parA < focB) {\r\n                        //获取当前焦点被遮挡的宽度+当前父容器已经滚去的宽度，就能得到现在父容器需要总的滚动宽度\r\n                        var rollWidth = focB - parA + parRollWidth;\r\n                        rightParentObj.style.left = \"-\" + rollWidth + \"px\";\r\n                        //*****************************左右上下滚动需要统一监控，用于动态加载图片，目前时间问题，没有继续开发，此处留做后期升级****************************/\r\n                    } else if (parB > focB) {\r\n                        //被滚去的宽度大于焦点left值+占位宽度,说明焦点完全被遮盖,那么父容器所需要向左滚动的宽度就等于当前焦点的left值\r\n                        var rollWidth = focusLeft;\r\n                        rightParentObj.style.left = \"-\" + rollWidth + \"px\";\r\n                        //*****************************左右上下滚动需要统一监控，用于动态加载图片，目前时间问题，没有继续开发，此处留做后期升级****************************/\r\n                    }\r\n                }\r\n\r\n                if (iptv.lastDire == 'left' && this_.enRightParentRoll == true || iptv.lastDire == 'down' && this_.enRightParentRoll == true) {\r\n                    //页面被滚去的宽度\r\n                    var parRollWidth = Math.abs(parseInt(rightParentObj.style.left)) || 0;\r\n                    //焦点的left值\r\n                    var focusLeft = parseInt(this_.X_Posi);\r\n                    //如果没有手动赋值，那么就获取left值\r\n                    if (iptv.isNull(focusLeft) || focusLeft == 0) {\r\n                        focusLeft = this_.nodeObj ? Math.abs(parseInt(this_.nodeObj.style.left)) : 0;\r\n                    }\r\n                    //页面被滚去的宽度\r\n                    var parA = parRollWidth;\r\n                    //焦点的LEFT值\r\n                    var focB = focusLeft;\r\n                    //如果焦点的TOP值小于当前被滚去的高度，那么说明此时需要往下滚\r\n                    if (parA > focB) {\r\n                        //如果需要父容器往下滚，那么滚去的高度就是焦点的TOP值\r\n                        var rollWidth = focB;\r\n                        rightParentObj.style.left = \"-\" + rollWidth + \"px\";\r\n                        //*****************************左右上下滚动需要统一监控，用于动态加载图片，目前时间问题，没有继续开发，此处留做后期升级****************************/\r\n                    }\r\n                }\r\n            } else if (this_.enRightPageRoll == true) {\r\n                //开启整页滚动\r\n                var rightParentId = this_.rightParentId;\r\n                var rightAreaId = this_.rightAreaId;\r\n                var rightParentObj = iptv.$(rightParentId);\r\n                var rightAreaObj = iptv.$(rightAreaId);\r\n                //获取当前页需要滚动的距离\r\n                var rollLeft = this_.focusLeftRoll || 0;\r\n                rightParentObj.style.left = '-' + rollLeft + \"px\";\r\n            }\r\n            //动态加载图片\r\n            if (this_.focusPageAllModel && this_.focusPageAllModel.length > 0 && this_.focusPageAllLoad == false) {\r\n                var allModel = this_.focusPageAllModel;\r\n                for (var i in allModel) {\r\n\r\n                    var focusModel = iptv(\"#\" + allModel[i]).getFocus();\r\n                    if (focusModel && focusModel.newSwap) {\r\n                        iptv(\"#\" + focusModel.imgID + \"_img\").src(focusModel.newSwap);\r\n                    }\r\n                }\r\n                this_.focusPageAllLoad = true;\r\n            }\r\n\r\n        };\r\n        //如果默认的onFocus方法不满足需求，就可以指定onFocus_属性\r\n        this_.onFocus_ = \"\";\r\n        // 默认获得焦点事件\r\n        this_.onFocus = function () {\r\n            if (this_.enFocus && this_.isCreated == true) {\r\n                this_.init();\r\n                if (iptv.isNotNull(this_.onFocus_)) {\r\n                    key.exeCode(this_.onFocus_);\r\n                } else {\r\n                    if (this_.focusType == 2) {\r\n                        iptv(\"#\" + this_.imgID).src(this_.newSwap);\r\n                    } else if (this_.focusType == 7) {\r\n                        if (key.curFocus.imgID) {\r\n                            iptv(\"#\" + key.curFocus.imgID).show();\r\n                        }\r\n                    } else if (this_.focusType == 10) {\r\n                        //焦点框是用户手动写到html中，负责移动此焦点框\r\n                        if (iptv.isNotNull(this_.selectBorderId)) {\r\n                            var lastFocusObj = iptv(\"#\" + this.lastFocusId).getFocus();\r\n                            //如果上一个焦点不是15或16，那么焦点框肯定是隐藏的，所以这边负责显示焦点框\r\n                            if (lastFocusObj && lastFocusObj.focusType != 10 || !lastFocusObj) {\r\n                                //显示光标\r\n                                iptv(\"#\" + this.selectBorderId).show();\r\n                            } else {\r\n                                iptv(\"#\" + this.selectBorderId).addClass(\"transition\")\r\n                            }\r\n                            //移动光标\r\n                            iptv(\"#\" + this_.selectBorderId).attr(\"top\", this_.Y_Posi + \"px\").attr(\"left\", this_.X_Posi + \"px\");\r\n                        } else {\r\n                            iptv.error(\"当前焦点未指定selectBorderId属性！\")\r\n                        }\r\n                    } else if (this_.focusType == 12) {\r\n                        //负责将对应的展示图片添加放大动画，焦点框是通过焦点对应图片添加放大动画\r\n                        //前提，需要有焦点对应的展示图片，同时需要有边框效果的焦点图片，其实就是将焦点对应的展示图片放大的同时，焦点图片也放大，焦点图片是有边框的图片\r\n                        var img = iptv(\"#\" + this_.imgID + \"_img\").addClass(\"transition\")[0];\r\n                        img.parentNode.style.zIndex = this_.focusImgParentZIndex;\r\n                        iptv(\"#\" + this_.imgID + \"_img\").attr(\"top\", (parseInt(img.style.top) - this_.changeSize) + \"px\").attr(\"left\", (parseInt(img.style.left) - this_.changeSize) + \"px\").attr(\"width\", (parseInt(img.style.width) + 2 * this_.changeSize) + \"px\").attr(\"height\", (parseInt(img.style.height) + 2 * this_.changeSize) + \"px\");\r\n                        //添加过渡  显示焦点\r\n                        var selects = iptv(\"#\" + this_.imgID).addClass(\"transition\").show()[0];\r\n                        selects.parentNode.style.zIndex = this_.imgParentZIndex;\r\n                        iptv(\"#\" + this_.imgID).attr(\"top\", (parseInt(selects.style.top) - this_.changeSize) + \"px\").attr(\"left\", (parseInt(selects.style.left) - this_.changeSize) + \"px\").attr(\"width\", (parseInt(selects.style.width) + 2 * this_.changeSize) + \"px\").attr(\"height\", (parseInt(selects.style.height) + 2 * this_.changeSize) + \"px\");\r\n                    } else if (this_.focusType == 13) {\r\n                        //负责将对应的展示图片赋予边框与动画，效果为选中后，对于的展示图片添加了边框与放大效果，焦点对应的焦点图片不存在任何效果可以直接放空白图片，切记是对应的展示图片添加动画\r\n                        //条件：焦点需要具有对应的展示图片，只负责控制焦点图片起到动画效果\r\n                        var img = iptv(\"#\" + this_.imgID + \"_img\").toggleClass(\"border\").addClass(\"transition\")[0];\r\n                        img.parentNode.style.zIndex = this_.focusImgParentZIndex;\r\n                        img.style.top = (parseInt(img.style.top) - this_.changeSize) + \"px\";\r\n                        img.style.left = (parseInt(img.style.left) - this_.changeSize) + \"px\";\r\n                        img.style.width = (parseInt(img.style.width) + 2 * this_.changeSize) + \"px\";\r\n                        img.style.height = (parseInt(img.style.height) + 2 * this_.changeSize) + \"px\";\r\n                    } else if (this_.focusType == 14) {\r\n                        //负责将焦点div添加边框\r\n                        //条件，焦点切换的形式就是讲焦点添加边框效果，同时显示与隐藏，都是针对于焦点div的操作\r\n                        iptv(\"#\" + this_.id).toggleClass(\"border\").attr(\"zIndex\", this_.imgParentZIndex).show();\r\n                    } else if (this_.focusType == 15) {\r\n                        //15与16都是代码自动生成div为选中框，该选中框只负责显示边框，对应的展示图片不具有放大效果，切换效果为显示与隐藏此自动生成的div边框，如果两个焦点都是15，同时两个焦点框大小也不一样，那么就会出现焦点边框自动放大与缩小效果\r\n                        //焦点框：是自动生成的焦点div,位置大小是根据焦点的style里面控制的\r\n                        //条件：需要用户对焦点的style赋予width,height,top,left属性，这些属性决定焦点框的大小与位置\r\n                        //切换效果：选中：焦点框div显示，位置大小是焦点的style控制的，移开：焦点框div隐藏\r\n                        var div = iptv.$(this_.selectionID);\r\n                        if (!div) {\r\n                            div = document.createElement('div');\r\n                            div.setAttribute(\"id\", this_.selectionID);\r\n                            div.id = this_.selectionID;\r\n                            div.style.width = \"0px\";\r\n                            div.style.height = \"0px\";\r\n                            div.style.top = \"0px\";\r\n                            div.style.left = \"0px\";\r\n                            div.style.zIndex = this_.imgParentZIndex;\r\n                            div.className = \"border position\";\r\n                            this_.nodeObj.parentNode.appendChild(div);\r\n                        }\r\n                        var lastFocusObj = iptv(\"#\" + this_.lastFocusId).getFocus();\r\n                        //如果上一个焦点不是15或16，那么焦点框肯定是隐藏的，所以这边负责显示焦点框\r\n                        if (lastFocusObj && lastFocusObj.focusType != 15 && lastFocusObj.focusType != 16) {\r\n                            iptv(\"#\" + this_.selectionID).show();\r\n                        } else {\r\n                            iptv(\"#\" + this_.selectionID).addClass(\"transition\");\r\n                        }\r\n                        div.style.width = this_.nodeObj.style.width;\r\n                        div.style.height = this_.nodeObj.style.height;\r\n                        div.style.top = this_.nodeObj.style.top;\r\n                        div.style.left = this_.nodeObj.style.left;\r\n                    } else if (this_.focusType == 16) {\r\n                        //焦点框：是自动生成的焦点div,位置大小是焦点对应的展示图片的父级目录div的大小位置控制的\r\n                        //放大大小：根据焦点changeSize属性控制放大的大小\r\n                        //条件：是具有对应的展示图片，需要自动生成焦点框div\r\n                        //切换效果：选中：展示图片放大，自动生成的焦点边框放大，移开：展示图片缩小，自动生成的焦点边框隐藏\r\n                        var div = iptv.$(this_.selectionID);\r\n                        if (!div) {\r\n                            div = document.createElement('div');\r\n                            div.setAttribute(\"id\", this_.selectionID);\r\n                            div.id = this_.selectionID;\r\n                            div.style.width = \"0px\";\r\n                            div.style.height = \"0px\";\r\n                            div.style.top = \"0px\";\r\n                            div.style.left = \"0px\";\r\n                            div.style.zIndex = this_.imgParentZIndex;\r\n                            div.className = \"border position\";\r\n                            this_.nodeObj.parentNode.appendChild(div);\r\n                        }\r\n                        var lastFocusObj = iptv(\"#\" + this_.lastFocusId).getFocus();\r\n                        var img = iptv.$(this_.imgID + \"_img\");\r\n                        //如果上一个焦点不是15或16，那么就不需要焦点具有动画效果，这边控制取消动画，直接让战士图片放大与焦点div直接显示\r\n                        if (lastFocusObj && lastFocusObj.focusType != 15 && lastFocusObj.focusType != 16) {\r\n                            iptv(\"#\" + this_.selectionID).removeClass(\"transition\");\r\n                        } else {\r\n                            iptv(\"#\" + this_.selectionID).addClass(\"transition\");\r\n                        }\r\n                        iptv(\"#\" + this_.selectionID).show();\r\n                        //让对应的展示图片放大，并且拥有放大动画\r\n                        iptv(\"#\" + this_.imgID + \"_img\").addClass(\"transition\");\r\n                        //焦点框放大,由于焦点框的位置是基于展示图片的父级元素的左上角为起点进行放大的，有了边框的原因导致位置与放大后的展示图片的位置不对应，所以需要进一步减去或加上边框的大小\r\n                        div.style.top = (parseInt(img.parentNode.style.top) - this_.changeSize - 2) + \"px\";\r\n                        div.style.left = (parseInt(img.parentNode.style.left) - this_.changeSize - 2) + \"px\";\r\n                        div.style.width = (parseInt(img.parentNode.style.width) + 2 * this_.changeSize + 1) + \"px\";\r\n                        div.style.height = (parseInt(img.parentNode.style.height) + 2 * this_.changeSize + 1) + \"px\";\r\n                        //对应的展示图片放大\r\n                        img.parentNode.style.zIndex = this_.focusImgParentZIndex;\r\n                        img.style.top = (parseInt(img.style.top) - this_.changeSize) + \"px\";\r\n                        img.style.left = (parseInt(img.style.left) - this_.changeSize) + \"px\";\r\n                        img.style.width = (parseInt(img.style.width) + 2 * this_.changeSize) + \"px\";\r\n                        img.style.height = (parseInt(img.style.height) + 2 * this_.changeSize) + \"px\";\r\n\r\n                    } else if (this_.focusType == 17) {\r\n                        //焦点框是用户自己写到html中，可以自己定制化焦点框的样式，比如边框，背景图，里面包含图片等等，对应动画效果为平移，没有放大效果\r\n                        //条件：需要用户自己定义一个焦点选中框div，并且指定该div有id值赋予给焦点selectionObjID属性\r\n                        var div = iptv.$(this_.selectionObjID);\r\n                        //如果上一个焦点不是17，或者是初始化第一个焦点，那么先显示移动框，不赋予动画\r\n                        //如果上一个焦点是17，但是焦点框不是同一个，需要隐藏上一个焦点框，显示下一个焦点框\r\n                        var lastFocusObj = iptv(\"#\" + this_.lastFocusId).getFocus();\r\n                        if (lastFocusObj && lastFocusObj.focusType != 17 || !lastFocusObj || lastFocusObj && lastFocusObj.focusType == 17 && lastFocusObj.selectionObjID != this_.selectionObjID) {\r\n                            if (div) {\r\n                                iptv(\"#\" + this_.selectionObjID).removeClass(\"transition\").show();\r\n                            }\r\n                        } else {\r\n                            //如果上一个焦点是17,并且上一个焦点存在，那么就赋予动画\r\n                            if (lastFocusObj && lastFocusObj.focusType == 17 && div) {\r\n                                iptv(\"#\" + this_.selectionObjID).addClass(\"transition\");\r\n                            }\r\n                        }\r\n                        if (div) {\r\n                            var img = iptv.$(this_.imgID);\r\n                            div.style.top = parseInt(img.parentNode.style.top) + \"px\";\r\n                            div.style.left = parseInt(img.parentNode.style.left) + \"px\";\r\n                        }\r\n                    } else if (this_.focusType == 18) {\r\n                        //选中后，焦点框图片显示，同时该图片要同时与对应的焦点图片放大\r\n                        if (key.curFocus.imgID) {\r\n                            iptv(\"#\" + key.curFocus.imgID).removeClass(\"transitionsHide0_5\");\r\n                            iptv(\"#\" + key.curFocus.imgID + \"_img\").removeClass(\"transitionsHide0_5\");\r\n                            iptv(\"#\" + key.curFocus.imgID).addClass(\"transitionsShow0_5\");\r\n                            iptv(\"#\" + key.curFocus.imgID + \"_img\").addClass(\"transitionsShow0_5\");\r\n                            iptv(\"#\" + key.curFocus.imgID).show();\r\n\r\n                        }\r\n                    }\r\n                }\r\n                if (this_.onFocusEvent) {\r\n                    key.exeCode(this_.onFocusEvent);\r\n                }\r\n            }\r\n        };\r\n        this_.onBlur_ = \"\";\r\n        this_.onBlur = function () {\r\n            if (this_.enFocus && this_.isCreated == true) {\r\n                if (iptv.isNotNull(this_.onBlur_)) {\r\n                    key.exeCode(this_.onBlur_);\r\n                } else {\r\n                    if (this_.focusType == 2) {\r\n                        iptv(\"#\" + this_.imgID).src(this_.oldSwap);\r\n                    }\r\n                    // 隐藏发光圈圈\r\n                    if (this_.focusType == 7) {\r\n                        iptv(\"#\" + key.curFocus.imgID).hide();\r\n                    }\r\n\r\n                    if (this_.focusType == 10) {\r\n                        //隐藏光标\r\n                        iptv(\"#\" + this_.selectBorderId).hide();\r\n                    }\r\n                    if (this_.focusType == 12) {\r\n                        iptv(\"#\" + this_.imgID + \"_img\").toggleClass(\"transition\");\r\n                        var img = iptv.$(this_.imgID + \"_img\");\r\n                        img.parentNode.style.zIndex = 2;\r\n                        img.style.top = (parseInt(img.style.top) + this_.changeSize) + \"px\";\r\n                        img.style.left = (parseInt(img.style.left) + this_.changeSize) + \"px\";\r\n                        img.style.width = (parseInt(img.style.width) - 2 * this_.changeSize) + \"px\";\r\n                        img.style.height = (parseInt(img.style.height) - 2 * this_.changeSize) + \"px\";\r\n                        iptv(\"#\" + this_.imgID).hide();\r\n                        var selects = iptv.$(this_.imgID);\r\n                        selects.parentNode.style.zIndex = 2;\r\n                        selects.style.top = (parseInt(selects.style.top) + this_.changeSize) + \"px\";\r\n                        selects.style.left = (parseInt(selects.style.left) + this_.changeSize) + \"px\";\r\n                        selects.style.width = (parseInt(selects.style.width) - 2 * this_.changeSize) + \"px\";\r\n                        selects.style.height = (parseInt(selects.style.height) - 2 * this_.changeSize) + \"px\";\r\n                    }\r\n                    if (this_.focusType == 13) {\r\n                        iptv(\"#\" + this_.imgID + \"_img\").toggleClass(\"border\");\r\n                        var img = iptv.$(this_.imgID + \"_img\");\r\n                        img.parentNode.style.zIndex = 2;\r\n                        img.style.top = (parseInt(img.style.top) + this_.changeSize) + \"px\";\r\n                        img.style.left = (parseInt(img.style.left) + this_.changeSize) + \"px\";\r\n                        img.style.width = (parseInt(img.style.width) - 2 * this_.changeSize) + \"px\";\r\n                        img.style.height = (parseInt(img.style.height) - 2 * this_.changeSize) + \"px\";\r\n                    }\r\n                    if (this_.focusType == 14) {\r\n                        iptv(\"#\" + this_.id).hide().toggleClass(\"border\").attr(\"zIndex\", 2);\r\n                    }\r\n                    if (this_.focusType == 15) {\r\n                        var nextFocusObj = iptv(\"#\" + this_.nextFocusId).getFocus();\r\n                        if (nextFocusObj && nextFocusObj.focusType != 15) {\r\n                            iptv(\"#\" + this_.selectionID).hide();\r\n                        }\r\n                    }\r\n                    if (this_.focusType == 16) {\r\n                        //如果下一个即将获取焦点的焦点不是15或16，就隐藏选中框\r\n                        var nextFocusObj = iptv(\"#\" + this_.nextFocusId).getFocus();\r\n                        if (nextFocusObj && nextFocusObj.focusType != 15 && nextFocusObj && nextFocusObj.focusType != 16) {\r\n                            iptv(\"#\" + this_.selectionID).hide();\r\n                        }\r\n                        //还原图片大小\r\n                        var img = iptv.$(this_.imgID + \"_img\");\r\n                        img.parentNode.style.zIndex = 2;\r\n                        img.style.top = (parseInt(img.style.top) + this_.changeSize) + \"px\";\r\n                        img.style.left = (parseInt(img.style.left) + this_.changeSize) + \"px\";\r\n                        img.style.width = (parseInt(img.style.width) - 2 * this_.changeSize) + \"px\";\r\n                        img.style.height = (parseInt(img.style.height) - 2 * this_.changeSize) + \"px\";\r\n                    }\r\n                    if (this_.focusType == 17) {\r\n                        var div = iptv.$(this_.selectionObjID);\r\n                        //如果上一个焦点不是17，那么久先显示移动框，赋予动画\r\n                        var nextFocusObj = iptv(\"#\" + this_.nextFocusId).getFocus();\r\n                        if (nextFocusObj && nextFocusObj.focusType != 17 || nextFocusObj && nextFocusObj.selectionObjID != this_.selectionObjID) {\r\n                            if (div) {\r\n                                iptv(\"#\" + this_.selectionObjID).hide();\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (this_.focusType == 18) {\r\n                        iptv(\"#\" + key.curFocus.imgID).removeClass(\"transitionsShow0_5\").addClass(\"transitionsHide0_5\").hide();\r\n                        iptv(\"#\" + key.curFocus.imgID + \"_img\").removeClass(\"transitionsShow0_5\").addClass(\"transitionsHide0_5\")\r\n                    }\r\n                }\r\n\r\n                if (this_.onBlurEvent) {\r\n                    key.exeCode(this_.onBlurEvent);\r\n                }\r\n            }\r\n        };\r\n        this_.onClick = function () {\r\n            if (this_.enable == true && this_.enFocus == true && this_.isCreated == true) {\r\n                if (this_.buttonData && iptv.api && iptv.api.log) {\r\n                    iptv.api.log.buttonLog(this_.buttonData.buttonId);\r\n                }\r\n                key.exeCode(this_.clickEvent);\r\n            }\r\n        };\r\n    };\r\n\r\n    /**\r\n     * 所有方向属性与焦点行为事件\r\n     * @constructor\r\n     */\r\n    iptv.Dire = function () {\r\n    };\r\n\r\n    iptv.extend(iptv.Dire.prototype, {\r\n        up: '',\r\n        upOther: '',\r\n        right: '',\r\n        rightOther: '',\r\n        down: '',\r\n        downOther: '',\r\n        left: '',\r\n        leftOther: '',\r\n        otherEvent: '',\r\n        other: '',\r\n        // 某方向执行事件，字符串\r\n        upEvent: '',\r\n        rightEvent: '',\r\n        downEvent: '',\r\n        leftEvent: '',\r\n        //某方向原本指定的焦点被禁用了，就执行响应事件\r\n        upOtherEvent: '',\r\n        rightOtherEvent: '',\r\n        downOtherEvent: '',\r\n        leftOtherEvent: '',\r\n        //如果对于方向设置的焦点不在焦点池中，那么执行对于方向的事件或焦点\r\n        rightNoEvent: '',\r\n        rightNo: '',\r\n        leftNoEvent: '',\r\n        leftNo: '',\r\n        downNoEvent: '',\r\n        downNo: '',\r\n        upNoEvent: '',\r\n        upNo: ''\r\n    });\r\n\r\n    /**\r\n     * ID命名参数集合\r\n     * @param _x\r\n     * @param _y\r\n     * @param _imgID\r\n     * @param _upParentId\r\n     */\r\n    var IdList = function (_x, _y, _imgID, _upParentId) {\r\n        var this_ = this;\r\n        this_.x = _x;\r\n        this_.y = _y;\r\n        this_.imgID = _imgID;\r\n        this_.upParentId = _upParentId;\r\n    };\r\n\r\n    /**\r\n     * 根据id获取参数\r\n     * @param _id\r\n     * @returns {*}\r\n     */\r\n    var getIdList = function (_id) {\r\n        if (!_id) return null;\r\n        var d1 = _id;\r\n        var x1 = d1.indexOf(\"_\", 0);\r\n        var x2 = d1.indexOf(\"_\", x1 + 1);\r\n        var x3 = d1.indexOf(\"_\", x2 + 1);\r\n        var x4 = d1.indexOf(\"_\", x3 + 1);\r\n        var x5 = d1.indexOf(\"_\", x4 + 1);\r\n\r\n        var x = d1.substring(x1 + 2, x2);\r\n        var y = d1.substring(x2 + 2, x3);\r\n        var imgsrc = \"\";\r\n        if (x4 != -1) {\r\n            imgsrc = d1.substring(x3 + 1, x4);\r\n        }\r\n        var par = \"\";\r\n        if (x5 != -1) {\r\n            par = d1.substring(x4 + 1, x5);\r\n        }\r\n        return new IdList(x, y, imgsrc, par);\r\n    };\r\n\r\n    key.curFocus = new iptv.FocusModel();\r\n\r\n    //扩展iptv对象方法\r\n    iptv.fn.extend({\r\n        /**\r\n         *获取焦点对象\r\n         * @returns {iptv.FocusModel}\r\n         */\r\n        getFocus: function () {\r\n            var this_ = this;\r\n            if (this_[0] && this_[0].focusObj) {\r\n                return this_[0].focusObj;\r\n            }\r\n            return null;\r\n        },\r\n        /**\r\n         * 开启焦点权限，支持单个开启，多个同时开启\r\n         * @returns {enableFocus}\r\n         */\r\n        enableFocus: function () {\r\n            var this_ = this,\r\n                context = this_.context;\r\n            if (this_[0] && this_[0].focusObj) {\r\n                this_[0].focusObj.enFocus = true;\r\n            } else if (context && iptv.isArray(context)) {\r\n                for (var i in context) {\r\n                    var obj = iptv.focusCollection[context[i]];\r\n                    if (obj && obj.focusObj) {\r\n                        obj.focusObj.enFocus = true;\r\n                    }\r\n                }\r\n            }\r\n            return this_;\r\n        },\r\n        /**\r\n         * 禁用焦点权限，支持单个禁用，多个同时禁用\r\n         * @returns {enableFocus}\r\n         */\r\n        disableFocus: function () {\r\n            var this_ = this,\r\n                context = this_.context;\r\n            if (this_[0] && this_[0].focusObj) {\r\n                this_[0].focusObj.enFocus = false;\r\n            } else if (context && iptv.isArray(context)) {\r\n                for (var i in context) {\r\n                    var obj = iptv.focusCollection[context[i]];\r\n                    if (obj && obj.focusObj) {\r\n                        obj.focusObj.enFocus = false;\r\n                    }\r\n                }\r\n            }\r\n            return this_;\r\n        },\r\n        addFocus: function () {\r\n            var this_ = this,\r\n                context = this_.context,\r\n                doms = [],\r\n                focusId = null;\r\n            //如果是批量添加\r\n            if (context && iptv.isArray(context)) {\r\n                doms = context;\r\n            } else if (context && iptv.type(context) === \"object\") {\r\n                //如果是单个添加\r\n                doms.push(context);\r\n            }\r\n            for (var i = 0; i < doms.length; i++) {\r\n                var domObj = null,\r\n                    id = \"\",\r\n                    obj = doms[i];\r\n                if (obj && (id = obj.id) && (iptv.trim(id)) && id.indexOf(\"hands\") == 0 && (domObj = document.getElementById(id))) {\r\n                    var model = new iptv.FocusModel();\r\n                    model.id = focusId = id;\r\n                    var idParams = getIdList(id);\r\n                    model.X_Posi = idParams.x;\r\n                    model.Y_Posi = idParams.y;\r\n                    if (idParams.upParentId && iptv(\"#\" + idParams.upParentId)[0]) {\r\n                        model.ParentNode = iptv(\"#\" + idParams.upParentId)[0];\r\n                    }\r\n                    //获取焦点内部的图片id\r\n                    model.imgID = iptv.trim(idParams.imgID);\r\n                    //保存切换之前的图片地址\r\n                    model.oldSwap = iptv(\"#\" + model.imgID).src();\r\n\r\n                    model.enFocus = obj.enFocus || true;\r\n                    //确定键，确定事件\r\n                    model.clickEvent = obj.clickEvent || '';\r\n                    //新图地址\r\n                    model.newSwap = obj.newSwap || '';\r\n                    //焦点捆绑数据\r\n                    model.tempData = obj.tempData || null;\r\n                    //切换类型\r\n                    model.focusType = obj.focusType || 7;\r\n                    //切换到焦点上时，图标变大的大小   设计类型16,13,12\r\n                    model.changeSize = obj.changeSize || 0;\r\n                    //移动选中框id,此选中框是代码自动生成的元素，对应效果选中框放大与平移动画，对应focusType为15或16\r\n                    model.selectionID = obj.selectionID || 'selectionID';\r\n                    //移动选中框id，此选中框是用户自己要在html中指定元素的id，对应效果是平移选中框，不存在放大动画，与selectBorderId的区别就是它是控制位置没有动画，selectionObjId是控制位置有动画，对应focusTypeId为17\r\n                    model.selectionObjID = obj.selectionObjID || \"selectionObjID\";\r\n                    // 对应展示图片的层次大小\r\n                    model.focusImgZIndex = obj.focusImgZIndex || 998;\r\n                    // 对应焦点内部图片的层次大小\r\n                    model.focusImgParentZIndex = obj.focusImgParentZIndex || 998;\r\n                    // 对应焦点内部图片的层次大小\r\n                    model.imgZIndex = obj.imgZIndex || 999;\r\n                    // 对应焦点内部图片的父元素的层次大小\r\n                    model.imgParentZIndex = obj.imgParentZIndex || 999;\r\n                    //焦点的父节点的ID值  \r\n                    model.upParentId = obj.upParentId;\r\n                    //用户控制可观看区域的容器ID值\r\n                    model.upAreaId = obj.upAreaId;\r\n                    //按右焦点的父节点的ID值\r\n                    model.rightParentId = obj.rightParentId;\r\n                    //按右用于控制可观看区域容器的ID值\r\n                    model.rightAreaId = obj.rightAreaId;\r\n                    //开启父容器滚动,上下滚动\r\n                    model.enUpParentRoll = obj.enUpParentRoll || false;\r\n                    //开启父容器滚动,左右滚动\r\n                    model.enRightParentRoll = obj.enRightParentRoll || false;\r\n                    //开启整页滚动\r\n                    model.enRightPageRoll = obj.enRightPageRoll || false;\r\n                    //当前焦点索引\r\n                    model.focusIndex = obj.focusIndex || 0;\r\n                    //当前焦点对应的当前页\r\n                    model.focusCurPageNum = obj.focusCurPageNum || 0;\r\n                    //当前焦点对应的总页数\r\n                    model.focusAllPageNum = obj.focusAllPageNum || 0;\r\n                    ////当前焦点需要整页滚动的left值\r\n                    model.focusLeftRoll = obj.focusLeftRoll || 0;\r\n                    //当前焦点列表中第一个焦点的left值\r\n                    model.focusFirstLeft = obj.focusFirstLeft || 0;\r\n                    //当前焦点对应页码的所有焦点id,该值为数组对象\r\n                    model.focusPageAllModel = obj.focusPageAllModel || null;\r\n                    // 名称\r\n                    model.name = obj.name || '';\r\n                    // 指定移动到焦点上时，执行的事件\r\n                    model.onFocusEvent = obj.onFocusEvent || '';\r\n                    // 指定失去焦点时，执行的事件\r\n                    model.onBlurEvent = obj.onBlurEvent || '';\r\n                    // 指定移动边框的速度\r\n                    model.tweenSpeed = obj.tweenSpeed || '';\r\n                    // focusType为10的时候需要的选中框id\r\n                    model.selectBorderId = obj.selectBorderId || '';\r\n                    //代替默认获取焦点时的行为\r\n                    model.onFocus_ = obj.onFocus_ || '';\r\n                    //代替默认失去焦点时的行为\r\n                    model.onBlur_ = obj.onBlur_ || '';\r\n\r\n                    // ****************************方向初始化**********************/\r\n\r\n                    var diredemp = new iptv.Dire();\r\n                    diredemp.other = obj.other || '';\r\n                    diredemp.otherEvent = obj.otherEvent || '';\r\n                    diredemp.left = obj.left || '';\r\n                    diredemp.right = obj.right || '';\r\n                    diredemp.up = obj.up || '';\r\n                    diredemp.down = obj.down || '';\r\n                    diredemp.upEvent = obj.upEvent || '';\r\n                    diredemp.downEvent = obj.downEvent || '';\r\n                    diredemp.leftEvent = obj.leftEvent || '';\r\n                    diredemp.rightEvent = obj.rightEvent || '';\r\n                    diredemp.upOther = obj.upOther || '';\r\n                    diredemp.downOther = obj.downOther || '';\r\n                    diredemp.leftOther = obj.leftOther || '';\r\n                    diredemp.rightOther = obj.rightOther || '';\r\n                    diredemp.upOtherEvent = obj.upOtherEvent || '';\r\n                    diredemp.rightOtherEvent = obj.rightOtherEvent || '';\r\n                    diredemp.downOtherEvent = obj.downOtherEvent || '';\r\n                    diredemp.leftOtherEvent = obj.leftOtherEvent || '';\r\n                    diredemp.rightNoEvent = obj.rightNoEvent || '';\r\n                    diredemp.rightNo = obj.rightNo || '';\r\n                    diredemp.leftNoEvent = obj.leftNoEvent || '';\r\n                    diredemp.leftNo = obj.leftNo || '';\r\n                    diredemp.downNoEvent = obj.downNoEvent || '';\r\n                    diredemp.downNo = obj.downNo || '';\r\n                    diredemp.upNoEvent = obj.upNoEvent || '';\r\n                    diredemp.upNo = obj.upNo || '';\r\n                    focusDires[id] = diredemp;\r\n                    model.dieArr = diredemp;\r\n\r\n\r\n                    //该按钮已经通过初始化工作\r\n                    model.isCreated = true;\r\n                    model.nodeObj = domObj;\r\n                    domObj.focusObj = model;\r\n                    focusCollection[id] = domObj;\r\n                }\r\n            }\r\n            return focusId ? iptv(\"#\"+focusId) : this_ ;\r\n        },\r\n        /**\r\n         * 调用焦点获取焦点方法\r\n         * @returns {onFocus}\r\n         */\r\n        onFocus: function () {\r\n            var focusObj = this.getFocus();\r\n            if (focusObj) {\r\n                focusObj.onFocus();\r\n            }\r\n            return this;\r\n        }\r\n    });\r\n\r\n    //声明按键匿名函数\r\n    var keyDownEventfunction = function (evt) {\r\n        var keyCode = iptv.keyCode(evt);\r\n        var keyName = iptv.key.getKeyCodeName(keyCode);\r\n        if (keyCode == 0x0300) {\r\n            try {\r\n                var msgEvent = Utility.getEvent();\r\n                if (iptv.isNotNull(msgEvent)) {\r\n                    var msg = eval(\"(\" + msgEvent + \")\");\r\n                    if (msg != null && msg.type == \"EVENT_MEDIA_END\") {\r\n                        if (iptv(\"#ivideos\")[0]) {\r\n                            iptv(\"#ivideos\").src(iptv.videoUrl);\r\n                        }\r\n                    }\r\n                }\r\n            } catch (e) {\r\n            }\r\n        }\r\n        switch (keyName) {\r\n            case \"OK\" :\r\n                iptv.key.curFocus.onClick();\r\n                break;\r\n            case \"ONE\" :\r\n            case \"TWO\" :\r\n            case \"THREE\" :\r\n            case \"FOUR\" :\r\n            case \"FIVE\" :\r\n            case \"SIX\" :\r\n            case \"SEVEN\" :\r\n            case \"EIGHT\" :\r\n            case \"NINE\" :\r\n            case \"ZERO\" :\r\n            case \"DEL\" :\r\n                iptv.key.numChange(keyName);\r\n                break;\r\n            case \"LEFT\" :\r\n            case \"RIGHT\" :\r\n            case \"UP\" :\r\n            case \"DOWN\" :\r\n                iptv.key.focusHand(keyName);\r\n                if (evt) {\r\n                    evt.preventDefault();\r\n                    return false;\r\n                } else {\r\n                    if (event) {\r\n                        event.returnValue = false;\r\n                        return false;\r\n                    }\r\n                }\r\n                break;\r\n            case \"HOME_PAGE\":\r\n            case \"OUT_PAGE\":\r\n            case \"BACK\" :\r\n                try {\r\n                    if (evt) {\r\n                        evt.preventDefault();\r\n                    } else {\r\n                        if (event) {\r\n                            event.returnValue = false;\r\n                        }\r\n                    }\r\n                } catch (e) {\r\n                }\r\n                if (iptv.isFunction(iptv.key.backfunc)) {\r\n                    iptv.key.backfunc();\r\n                }\r\n                return false;\r\n                break;\r\n            default :\r\n                break;\r\n        }\r\n    };\r\n\r\n    //添加按键事件\r\n    iptv(document).addEventListener(\"keydown\", keyDownEventfunction);\r\n\r\n    if (typeof module === \"object\" && module && typeof module.exports === \"object\") {\r\n        module.exports = iptv;\r\n    } else {\r\n        if (typeof define === \"function\" && define.amd) {\r\n            define(\"iptv\", [], function () {\r\n                return iptv;\r\n            });\r\n        }\r\n    }\r\n\r\n    if (typeof window === \"object\" && typeof window.document === \"object\") {\r\n        window.iptv = window.$ = iptv;\r\n    }\r\n\r\n})(window, iptv);","module.exports = function(module) {\r\n\tif (!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif (!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;"],"sourceRoot":""}